//Any CL effect event in this script can be called simply by using:
//clientevent update all const.localplayer.scriptID <eventname> <params>
//Also this script stays alive for the duration of the map.
//
//You cannot remove this script.

//Kaz Elder effects were moved to independant script - Kaz Hollow One is still here though

{
	const LIGHTSYS_N_LIGHTS 16

	const PLAYER_MODEL human/reference.mdl
	const CL_HBAR_SPRITE health_bar.spr

	//array.create ARRAY_LIGHT_OWNERLIST
	array.create ARRAY_LIGHT_COLOR
	array.create ARRAY_LIGHT_RAD
	array.create ARRAY_LIGHT_IDLIST
}

#include player/client/halos
#include player/player_cl_effects_weather

{ ext_cl_clientcmd //<commands>
	dbg *** ext_cl_clientcmd $quote(PARAM1)
	//The Steam Pipe variant makes some commands illegal to send from the server
	//this is a work around to have the client send commands to himself
	cleffect clientcmd PARAM1
}

{ game_prerender

	if ( LIGHTSYS_TRACK_LIGHTS ) calleventloop LIGHTSYS_N_LIGHTS lightsys_render_lights
	if ( SFX_METAL_CAVE_LIGHT_ACTIVE ) callevent cl_metal_cave_cycle
}

//==========================================
//Call error against specific client so as not to disconnect whole server
{ cl_error //<text>
	errormessage PARAM1
}

//==========================================
//Kaz Hollow One Effects

//Drainers
{
	const KH_SPRITE_DRAINER fire1_fixed.spr
	const KH_DRAINER_SPEED 30
	const KH_GLOW_SPRITE 3dmflaora.spr //glow01.spr is easier to color, but doesn't appear proper on some maps
}

{ kh_setup //<owner>

	setvard KH_SKEL PARAM1
	//dbg **** kh_setup activate
}

{ kh_make_drain_sprite //<pos> [idx] <angs> <draining>
	//dbg **** kh_make_drain_sprite PARAM1 PARAM2 PARAM3

	local SPAWN_LOC PARAM1
	setvard KH_DRAINER_ANGS PARAM3
	cleffect tempent sprite KH_SPRITE_DRAINER SPAWN_LOC kh_setup_drainer

	if ( PARAM4 ) sound.play3d magic/energy1_loud.wav 10 SPAWN_LOC
}

{ kh_sprite_splode //origin
	//dbg **** kh_sprite_splode
	local SPARK_ORG PARAM1
	cleffect tempent sprite KH_GLOW_SPRITE SPARK_ORG kh_setup_spark
	cleffect tempent sprite KH_GLOW_SPRITE SPARK_ORG kh_setup_spark
	cleffect tempent sprite KH_GLOW_SPRITE SPARK_ORG kh_setup_spark
	cleffect tempent sprite KH_GLOW_SPRITE SPARK_ORG kh_setup_spark
	sound.play3d turret/tu_die2.wav 10 SPARK_ORG
}

{ kh_setup_drainer
	cleffect tempent set_current_prop death_delay 1.1
	cleffect tempent set_current_prop rendercolor (0,0,255)
	cleffect tempent set_current_prop renderamt 255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop framerate 30
	cleffect tempent set_current_prop frames 23
	cleffect tempent set_current_prop scale 1.0
	cleffect tempent set_current_prop gravity 0
	cleffect tempent set_current_prop angles KH_DRAINER_ANGS
	cleffect tempent set_current_prop velocity $relvel(KH_DRAINER_ANGS,$vec(0,KH_DRAINER_SPEED,0))
	cleffect tempent set_current_prop collide none
}

{ kh_setup_spark
	local L_RND_ANG $randf(0,359)
	cleffect tempent set_current_prop death_delay 	2.0
	cleffect tempent set_current_prop fadeout 	lifetime
	cleffect tempent set_current_prop velocity $relvel($vec(0,L_RND_ANG,0),$vec(0,120,110))
	cleffect tempent set_current_prop bouncefactor 	5
	cleffect tempent set_current_prop scale 	0.25
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop rendercolor (0,0,255)
	cleffect tempent set_current_prop gravity 	0.5
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	1
}

{ kh_setup_hand_sprite
	cleffect tempent set_current_prop death_delay 	2.0
	cleffect tempent set_current_prop fadeout 	lifetime
	cleffect tempent set_current_prop velocity $relvel($vec(0,0,0),$vec($randf(-20,20),0,0))
	cleffect tempent set_current_prop bouncefactor 	0
	cleffect tempent set_current_prop scale 	0.1
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop rendercolor KH_HAND_SPRITE_COLOR
	cleffect tempent set_current_prop gravity 	-0.5
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	1
}


{ kh_end_effects
	setvard MIRRORS_ON 0
	setvard KH_FIRE_BREATH 0
	setvard KH_FLIGHT_SPRITES_ON 0
	//dbg **** kh_end_effects
}

{ kh_hand_sprites
	local SPRITE_DURATION PARAM1
	setvard KH_HAND_SPRITE_COLOR PARAM2
	setvard KH_HAND_SPRITES_ON 1
	callevent SPRITE_DURATION kh_end_hand_sprites
	callevent kh_hand_sprite_loop
}

{ kh_hand_sprite_loop

	if KH_HAND_SPRITES_ON
	callevent 0.1 kh_hand_sprite_loop

	local SPAWN_POS $getcl(KH_SKEL,bonepos,20)
	cleffect tempent sprite KH_GLOW_SPRITE SPAWN_POS kh_setup_hand_sprite

	local SPAWN_POS $getcl(KH_SKEL,bonepos,16)
	cleffect tempent sprite KH_GLOW_SPRITE SPAWN_POS kh_setup_hand_sprite

}

{ kh_end_hand_sprites
	setvard KH_HAND_SPRITES_ON 0
}

{ kh_spawn_mirrors //<model> <origin> <angles>
	//we pass the model here to make sure it doesn't precache when it's not needed
	setvard MIRROR_MODEL PARAM1
	local MIRROR_START PARAM2
	setvard MIRROR_ANGLES PARAM3

	//dbg **** Mirrors start: MIRROR_MODEL MIRROR_START MIRROR_ANGLES

	const MIRROR_DIST 96
	const MIRROR_LIFE 5.0
	setvard MIRROR_ANGLE_COUNTER 0

	setvard MIRRORS_ON 1
	setvard MIRROR_MODE 1
	setvard MIRROR_RENDERAMT 0

	local MIRROR_START_SPEED 5

	//five mirror images at various angles
	local MIRROR_SANG 0
	setvard MIRROR_VEL $relvel($vec(0,MIRROR_SANG,0),$vec(0,MIRROR_START_SPEED,0))
	cleffect tempent model MIRROR_MODEL MIRROR_START kh_setup_mirror kh_update_mirror0

	add MIRROR_SANG 72
	setvard MIRROR_VEL $relvel($vec(0,MIRROR_SANG,0),$vec(0,MIRROR_START_SPEED,0))
	cleffect tempent model MIRROR_MODEL MIRROR_START kh_setup_mirror kh_update_mirror1

	add MIRROR_SANG 72
	setvard MIRROR_VEL $relvel($vec(0,MIRROR_SANG,0),$vec(0,MIRROR_START_SPEED,0))
	cleffect tempent model MIRROR_MODEL MIRROR_START kh_setup_mirror kh_update_mirror2

	add MIRROR_SANG 72
	setvard MIRROR_VEL $relvel($vec(0,MIRROR_SANG,0),$vec(0,MIRROR_START_SPEED,0))
	cleffect tempent model MIRROR_MODEL MIRROR_START kh_setup_mirror kh_update_mirror3

	add MIRROR_SANG 72
	setvard MIRROR_VEL $relvel($vec(0,MIRROR_SANG,0),$vec(0,MIRROR_START_SPEED,0))
	cleffect tempent model MIRROR_MODEL MIRROR_START kh_setup_mirror kh_update_mirror4

	callevent MIRROR_LIFE kh_refresh_mirrors
}

{ kh_update_mirror0
	callevent kh_mirror_update 0
}
{ kh_update_mirror1
	callevent kh_mirror_update 72
}
{ kh_update_mirror2
	callevent kh_mirror_update 144
}
{ kh_update_mirror3
	callevent kh_mirror_update 216
}
{ kh_update_mirror4
	callevent kh_mirror_update 288
	add MIRROR_ANGLE_COUNTER 1
	if ( MIRROR_ANGLE_COUNTER  > 359 ) subtract MIRROR_ANGLE_COUNTER 359
}

{ kh_mirror_update

	if ( !MIRRORS_ON )
	{
		cleffect tempent set_current_prop rendermode add
		cleffect tempent set_current_prop renderamt 0
		cleffect tempent set_current_prop death_delay 0.1
	}

	if MIRRORS_ON

	if ( MIRROR_MODE == 1 )
	{
		//fade in (all mirrors)
		//dbg **** Mirrors fade in MIRROR_RENDERAMT
		add MIRROR_RENDERAMT 5
		if ( MIRROR_RENDERAMT >= 255 )
		{
			//cleffect tempent set_current_prop rendermode add
			cleffect tempent set_current_prop renderamt 255
			setvard MIRROR_MODE 2
		}
		else
		{
			cleffect tempent set_current_prop renderamt MIRROR_RENDERAMT
		}
	}

	if ( MIRROR_MODE == 2 )
	{
		local ANG_ADJ PARAM1
		//add MIRROR_ANGLE_COUNTER 1
		//if ( MIRROR_ANGLE_COUNTER > 359 ) subtract MIRROR_ANGLE_COUNTER 359
		local L_ANG MIRROR_ANGLE_COUNTER
		add L_ANG ANG_ADJ
		if ( L_ANG > 359 ) subtract L_ANG 359


		local MIRROR_POS $getcl(KH_SKEL,origin)
		local DBG_POS MIRROR_POS
		vectoradd MIRROR_POS $relpos($vec(0,L_ANG,0),$vec(0,MIRROR_DIST,0))

		//dbg **** mirrors_spin $dist(MIRROR_POS,DBG_POS)

		cleffect tempent set_current_prop renderamt 255
		cleffect tempent set_current_prop rendermode add
		cleffect tempent set_current_prop angles $getcl(KH_SKEL,angles)
		cleffect tempent set_current_prop origin MIRROR_POS
		cleffect tempent set_current_prop velocity 0
	}

	//works, but fugly
	//cleffect tempent set_current_prop sequence $getcl(KH_SKEL,anim)
	//cleffect tempent set_current_prop frame $getcl(KH_SKEL,frame)
	//cleffect tempent set_current_prop framerate $getcl(KH_SKEL,framerate)
}



{ kh_refresh_mirrors

	dbg **** kh_refresh_mirrors

	if MIRRORS_ON

	setvard MIRROR_ANGLES $getcl(KH_SKEL,angles)

	local L_MIRROR_ANG MIRROR_ANGLE_COUNTER
	if ( L_MIRROR_ANG > 359 ) subtract L_MIRROR_ANG 359
	local L_MIRROR_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL L_MIRROR_POS kh_setup_mirror kh_update_mirror0

	local L_MIRROR_ANG MIRROR_ANGLE_COUNTER
	add L_MIRROR_ANG 72
	if ( L_MIRROR_ANG > 359 ) subtract L_MIRROR_ANG 359
	local L_MIRROR_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL L_MIRROR_POS kh_setup_mirror kh_update_mirror1

	local L_MIRROR_ANG MIRROR_ANGLE_COUNTER
	add L_MIRROR_ANG 144
	if ( L_MIRROR_ANG > 359 ) subtract L_MIRROR_ANG 359
	local L_MIRROR_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL L_MIRROR_POS kh_setup_mirror kh_update_mirror2

	local L_MIRROR_ANG MIRROR_ANGLE_COUNTER
	add L_MIRROR_ANG 216
	if ( L_MIRROR_ANG > 359 ) subtract L_MIRROR_ANG 359
	local L_MIRROR_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL L_MIRROR_POS kh_setup_mirror kh_update_mirror3

	local L_MIRROR_ANG MIRROR_ANGLE_COUNTER
	add L_MIRROR_ANG 288
	if ( L_MIRROR_ANG > 359 ) subtract L_MIRROR_ANG 359
	local L_MIRROR_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL L_MIRROR_POS kh_setup_mirror kh_update_mirror4


	callevent MIRROR_LIFE kh_refresh_mirrors
}

{ kh_setup_mirror
	cleffect tempent set_current_prop death_delay 	MIRROR_LIFE
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop scale 1.0
	cleffect tempent set_current_prop gravity 	0
	cleffect tempent set_current_prop angles $getcl(KH_SKEL,angles)
	cleffect tempent set_current_prop velocity MIRROR_VEL
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate 1.0
	cleffect tempent set_current_prop frames 999
}

{ kh_mirror_poof
	cleffect tempent set_current_prop death_delay 	3.0
	cleffect tempent set_current_prop fadeout		lifetime
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop scale 1.0
	cleffect tempent set_current_prop gravity 	-0.25
	cleffect tempent set_current_prop angles $getcl(KH_SKEL,angles)
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate 1.0
	cleffect tempent set_current_prop frames 999
}

{ kh_mirrors_off

	//dbg **** kh_mirrors_off

	setvard MIRRORS_ON 0

	
	local POOF_POS_ANG MIRROR_ANGLE_COUNTER
	local POOF_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL POOF_POS kh_mirror_poof

	local POOF_POS_ANG MIRROR_ANGLE_COUNTER
	add POOF_POS_ANG 72
	if ( POOF_POS_ANG > 359 ) subtract POOF_POS_ANG 359
	local POOF_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL POOF_POS kh_mirror_poof

	local POOF_POS_ANG MIRROR_ANGLE_COUNTER
	add POOF_POS_ANG 144
	if ( POOF_POS_ANG > 359 ) subtract POOF_POS_ANG 359
	local POOF_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL POOF_POS kh_mirror_poof

	local POOF_POS_ANG MIRROR_ANGLE_COUNTER
	add POOF_POS_ANG 216
	if ( POOF_POS_ANG > 359 ) subtract POOF_POS_ANG 359
	local POOF_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL POOF_POS kh_mirror_poof

	local POOF_POS_ANG MIRROR_ANGLE_COUNTER
	add POOF_POS_ANG 288
	if ( POOF_POS_ANG > 359 ) subtract POOF_POS_ANG 359
	local POOF_POS $relpos($vec(0,POOF_POS_ANG,0),$vec(0,MIRROR_DIST,0))
	cleffect tempent model MIRROR_MODEL POOF_POS kh_mirror_poof
}

//== Ice Spikes

{ kh_ice_spikes //<position>
	const SOUND_FREEZE magic/freeze.wav
	local SPAWN_POS PARAM1
	cleffect tempent model weapons/projectiles.mdl SPAWN_POS kh_setup_ice_spikes kh_update_ice_spikes
	sound.play3d SOUND_FREEZE 10 SPAWN_POS
}

{ kh_update_ice_spikes

	if game.tempent.fuser2 != 1

	local CUR_ANIM game.tempent.anim
	local CUR_FRAME game.tempent.frame //meh, this seems to be broken for models, returns all sorts of weird numbers

	//dbg *** kh_update_ice_spikes game.tempent.fuser1 game.tempent.fuser2 game.tempent.animtime game.tempent.starttime 

	if ( CUR_ANIM == 17 )
	{
		local RAISE_TIME game.tempent.fuser1
		add RAISE_TIME 0.5
		if ( game.time > RAISE_TIME )
		{
			cleffect tempent set_current_prop sequence 18
			cleffect tempent set_current_prop framerate 0.1
			cleffect tempent set_current_prop frame 0
			cleffect tempent set_current_prop fuser2 1
		}
	}
}

{ kh_setup_ice_spikes
	cleffect tempent set_current_prop death_delay 2.0
	//cleffect tempent set_current_prop renderamt	255
	//cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop scale 1.0
	cleffect tempent set_current_prop gravity 	0
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate 2.0
	cleffect tempent set_current_prop frames 999
	cleffect tempent set_current_prop body 45
	cleffect tempent set_current_prop sequence 17
	cleffect tempent set_current_prop fuser1 game.time
	cleffect tempent set_current_prop fuser2 69
}

// ==== Fire/Posion Breath

{ kh_fire_breath_on //(external)
	setvard KH_FIRE_BREATH 1
	setvard KH_BREATH_COLOR (0,0,0)
	setvard KH_FLAME_SPRITE PARAM1 //passing sprite to avoid uneeded precaches
	dbg **** kh_fire_breath_on KH_FLAME_SPRITE at $getcl(KH_SKEL,attachment2) ang $getcl(KH_SKEL,angles.yaw)
	callevent kh_fire_breath_loop
}

{ kh_fire_breath_loop
	if KH_FIRE_BREATH
	callevent 0.01 kh_fire_breath_loop
	local CLOUD_ORG $getcl(KH_SKEL,attachment2) //just learned this attachment command from the code
	//if ( !$getcl(KH_SKEL,visible) )	vectoradd CLOUD_ORG z 72
	cleffect tempent sprite KH_FLAME_SPRITE CLOUD_ORG setup_fire_breath
	cleffect tempent sprite KH_FLAME_SPRITE CLOUD_ORG setup_fire_breath
}

{ kh_fire_breath_off //(external)
	setvard KH_FIRE_BREATH 0
}

{ kh_poison_breath_on //<sprite>
	setvard KH_FIRE_BREATH 1
	setvard KH_BREATH_COLOR (0,255,0)
	setvard KH_FLAME_SPRITE PARAM1 //passing sprite to avoid uneeded precaches
	//dbg **** kh_fire_breath_on KH_FLAME_SPRITE at $getcl(KH_SKEL,attachment2) ang $getcl(KH_SKEL,angles.yaw)
	callevent kh_fire_breath_loop
}

{ kh_poison_breath_loop
	if KH_FIRE_BREATH
	callevent 0.01 kh_poison_breath_loop
	local CLOUD_ORG $getcl(KH_SKEL,attachment2) //just learned this attachment command from the code
	//if ( !$getcl(KH_SKEL,visible) )	vectoradd CLOUD_ORG z 72
	cleffect tempent sprite KH_FLAME_SPRITE CLOUD_ORG setup_fire_breath
	cleffect tempent sprite KH_FLAME_SPRITE CLOUD_ORG setup_fire_breath
}

{ kh_poison_breath_off //(external)
	setvard KH_FIRE_BREATH 0
}

{ [client] setup_fire_breath
	cleffect tempent set_current_prop death_delay 	1.0
	cleffect tempent set_current_prop framerate		10
	cleffect tempent set_current_prop frames			9
	cleffect tempent set_current_prop bouncefactor 	0
	cleffect tempent set_current_prop scale 			$randf(0.5,1.0)
	cleffect tempent set_current_prop rendermode		add
	cleffect tempent set_current_prop renderamt		200
	cleffect tempent set_current_prop rendercolor	KH_BREATH_COLOR
	cleffect tempent set_current_prop gravity 		.005
	cleffect tempent set_current_prop collide 		none

	local RND_RL $randf(-20,20)
	local RND_UD $randf(-20,20)
	local MY_ANG $getcl(KH_SKEL,angles)
	local CLOUD_VEL $relvel(MY_ANG,$vec(RND_RL,$randf(300,400),RND_UD))
	cleffect tempent set_current_prop velocity CLOUD_VEL
}

//=== Lightning Shield

{ kh_zap_target_on //target
	setvard KH_ZAP_ON 1
	setvard KH_ZAP_TARGET PARAM1
	callevent kh_zap_target_loop
	setvard KH_ZAP_NERF game.time
	add KH_ZAP_NERF 1.0
}

{ kh_zap_target_loop

	if KH_ZAP_ON
	callevent 0.1 kh_zap_target_loop

	if ( game.time > KH_ZAP_NERF )
	{
		//been zapping for awhile now, cut down to avoid ent flood
		local EXIT_SUB $rand(0,1)
	}
	if !EXIT_SUB
	

	local BEAM_START $getcl(KH_SKEL,origin)
	local BEAM_END $getcl(KH_SKEL,origin) //$getcl(KH_ZAP_TARGET,origin)

	vectoradd BEAM_START z 36 //adjust for height

	local RND_PITCH $randf(0,359)
	local RND_YAW $randf(0,359)
	vectoradd BEAM_START $relpos($vec(RND_PITCH,RND_YAW,0),$vec(0,32,0))

	local RND_PITCH $randf(0,359)
	local RND_YAW $randf(0,359)
	vectoradd BEAM_END $relpos($vec(RND_PITCH,RND_YAW,0),$vec(0,32,0))
	cleffect beam_points BEAM_START BEAM_END lgtning.spr 0.2 2 9 0.3 0.1 30 (2,1.5,0.25)

}

{ kh_zap_target_off
	setvard KH_ZAP_ON 0
}

//====================== FLIGHT SPRITES =============================

{ kh_flight_sprites //<1|0>
	if ( PARAM1 )
	{
		setvard KH_FLIGHT_SPRITES_ON 1
		setvard KH_FS_ROT_COUNT 0
		setvard KH_FS_ANG_COUNT 0
		calleventloop 18 kh_spawn_flight_sprites
		callevent 10.0 kh_refresh_flight_sprites
	}
	else
	{
		setvard KH_FLIGHT_SPRITES_ON 0
	}
}

{ kh_spawn_flight_sprites

	local SPAWN_POS $getcl(KH_SKEL,origin)
	vectoradd SPAWN_POS $relpos($vec(0,KH_FS_ANG_COUNT,0),$vec(0,64,0))
	cleffect tempent sprite KH_GLOW_SPRITE SPAWN_POS kh_setup_flight_sprite kh_update_flight_sprite
	add KH_FS_ANG_COUNT 40
}

{ kh_refresh_flight_sprites
	if KH_FLIGHT_SPRITES_ON
	setvard KH_FS_ANG_COUNT 0
	calleventloop 9 kh_spawn_flight_sprites
	callevent 10.0 kh_refresh_flight_sprites
}


{ kh_update_flight_sprite
	if ( KH_FLIGHT_SPRITES_ON )
	{
		//dbg **** kh_update_flight_sprite KH_FS_ROT_COUNT [ game.tempent.fuser1 ]
		if ( game.tempent.fuser1 == 0 )
		{
			add KH_FS_ROT_COUNT 1
			if KH_FS_ROT_COUNT > 359
			subtract KH_FS_ROT_COUNT 359
		}
		local MY_ROT KH_FS_ROT_COUNT
		add MY_ROT game.tempent.fuser1
		if ( MY_ROT > 359 ) subtract MY_ROT 359
		local MY_POS $getcl(KH_SKEL,origin)
		vectoradd MY_POS $relpos($vec(0,MY_ROT,0),$vec(0,64,0))
		cleffect tempent set_current_prop origin MY_POS
	}
	else
	{
		cleffect tempent set_current_prop death_delay 0.01
		cleffect tempent set_current_prop renderamt 0
	}
}

{ kh_setup_flight_sprite
	cleffect tempent set_current_prop death_delay 	10.0
	cleffect tempent set_current_prop velocity $relvel($vec(0,0,0),$vec($randf(-20,20),0,0))
	cleffect tempent set_current_prop bouncefactor 	0
	cleffect tempent set_current_prop scale 	1.0
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	//cleffect tempent set_current_prop rendercolor (255,255,255)
	cleffect tempent set_current_prop gravity 	0
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	1
	cleffect tempent set_current_prop update	1
	cleffect tempent set_current_prop fuser1	KH_FS_ANG_COUNT
}

{ kh_dragon_death //<pos>
	setvard KH_DRAG_POS PARAM1
	vectorset KH_DRAG_POS z $get_ground_height(KH_DRAG_POS)

	//dbg **** kh_dragon_death KH_DRAG_POS

	//dragon pattern
	setvard KH_DRAG_PAT01 "0;0;0;1;0;1;0;1;0;0;0;0"
	setvard KH_DRAG_PAT02 "0;1;0;0;1;1;1;0;0;0;1;0"
	setvard KH_DRAG_PAT03 "1;0;0;0;1;1;1;0;0;0;0;1"
	setvard KH_DRAG_PAT04 "1;1;0;0;0;1;0;0;0;0;1;1"
	setvard KH_DRAG_PAT05 "0;1;1;0;0;1;0;0;1;1;1;0"
	setvard KH_DRAG_PAT06 "0;0;1;1;1;1;1;1;1;1;0;0"
	setvard KH_DRAG_PAT07 "0;0;0;1;1;1;1;1;1;0;0;0"
	setvard KH_DRAG_PAT08 "0;0;0;0;1;1;1;0;0;0;0;0"
	setvard KH_DRAG_PAT09 "0;0;0;0;0;1;0;0;0;0;0;0"
	setvard KH_DRAG_PAT10 "0;0;0;0;0;1;0;0;0;0;0;0"
	setvard KH_DRAG_PAT11 "0;0;0;0;0;1;0;0;0;0;0;0"
	setvard KH_DRAG_PAT12 "0;0;0;0;0;1;0;0;0;0;0;0"
	setvard KH_DRAG_PAT13 "0;0;0;0;0;1;0;0;0;0;0;0"
	setvard KH_DRAG_PAT14 "0;0;0;0;0;0;0;0;0;0;0;0"
	setvard KH_DRAG_PAT15 "0;0;0;0;0;0;1;0;0;0;0;0"
	setvard KH_DRAG_PAT16 "0;0;0;0;0;0;0;1;0;0;0;0"

	setvard KH_DRAG_COUNT 0
	callevent kh_dragon_death_loop
}

{ kh_dragon_death_loop

	//dbg **** kh_dragon_death_loop KH_DRAG_COUNT

	if ( KH_DRAG_COUNT < 16 ) callevent 0.2 kh_dragon_death_loop
	add KH_DRAG_COUNT 1	

	if ( KH_DRAG_COUNT == 1 ) callevent kh_make_row KH_DRAG_PAT01
	if ( KH_DRAG_COUNT == 2 ) callevent kh_make_row KH_DRAG_PAT02
	if ( KH_DRAG_COUNT == 3 ) callevent kh_make_row KH_DRAG_PAT03
	if ( KH_DRAG_COUNT == 4 ) callevent kh_make_row KH_DRAG_PAT04
	if ( KH_DRAG_COUNT == 5 ) callevent kh_make_row KH_DRAG_PAT05
	if ( KH_DRAG_COUNT == 6 ) callevent kh_make_row KH_DRAG_PAT06
	if ( KH_DRAG_COUNT == 7 ) callevent kh_make_row KH_DRAG_PAT07
	if ( KH_DRAG_COUNT == 8 ) callevent kh_make_row KH_DRAG_PAT08
	if ( KH_DRAG_COUNT == 9 ) callevent kh_make_row KH_DRAG_PAT09
	if ( KH_DRAG_COUNT == 10 ) callevent kh_make_row KH_DRAG_PAT10
	if ( KH_DRAG_COUNT == 11 ) callevent kh_make_row KH_DRAG_PAT11
	if ( KH_DRAG_COUNT == 12 ) callevent kh_make_row KH_DRAG_PAT12
	if ( KH_DRAG_COUNT == 13 ) callevent kh_make_row KH_DRAG_PAT13
	if ( KH_DRAG_COUNT == 14 ) callevent kh_make_row KH_DRAG_PAT14
	if ( KH_DRAG_COUNT == 15 ) callevent kh_make_row KH_DRAG_PAT15
	if ( KH_DRAG_COUNT == 16 ) callevent kh_make_row KH_DRAG_PAT16
}

//	cleffect tempent sprite 3dmflaora.spr SPR_POS kh_dragon_sprite
{ kh_make_row
	setvard KH_TEMP_ROW PARAM1
	setvard KH_X_COUNT 8
	calleventloop $get_token_amt(KH_TEMP_ROW) kh_make_row_loop
}

{ kh_make_row_loop
	local CUR_IDX game.script.iteration
	//dbg *** kh_dragon_death_loop KH_TEMP_ROW CUR_IDX $get_token(KH_TEMP_ROW,CUR_IDX)
	if $get_token(KH_TEMP_ROW,CUR_IDX) == 1
	local KH_X_COUNT 16
	multiply KH_X_COUNT CUR_IDX
	subtract KH_X_COUNT 96
	local SPRITE_POS KH_DRAG_POS
	vectoradd SPRITE_POS $relpos($vec(0,0,0),$vec(KH_X_COUNT,0,0))
	cleffect tempent sprite 3dmflaora.spr SPRITE_POS kh_dragon_sprite
}

{ kh_dragon_sprite
	cleffect tempent set_current_prop death_delay 	5.0
	cleffect tempent set_current_prop fadeout 	lifetime
	cleffect tempent set_current_prop scale 	1.0
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop gravity 	-0.05
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	1
}

//==== TITAN

{ titan_setup //$get(ent_me,index) CL_TELE_SPR CL_GLOW_SPR

	//Passing the sprite names to avoid uneeded precaches
	setvard TN_IDX PARAM1
	setvard TN_TELE_SPR PARAM2
	const TN_TELE_FRAMES 25
	setvard TN_GLOW_SPR PARAM3

	//dbg **** titan_setup TN_IDX TN_TELE_SPR TN_GLOW_SPR
}

{ titan_summon_sprite //<sum_point>

	cleffect tempent sprite TN_TELE_SPR PARAM1 titan_tele_sprite

	if !TN_SPRITE_LOOP
	setvard TN_SPRITE_LOOP 1
	callevent titan_sprite_loop
	callevent 2.5 titan_end_sprite_loop
}

{ titan_sprite_loop
	if TN_SPRITE_LOOP
	callevent 0.25 titan_sprite_loop
	cleffect tempent sprite TN_GLOW_SPR $getcl(TN_IDX,attachment1) titan_hand_sprite_setup
	cleffect tempent sprite TN_GLOW_SPR $getcl(TN_IDX,attachment2) titan_hand_sprite_setup
}

{ titan_end_sprite_loop
	setvard TN_SPRITE_LOOP 0
}

{ titan_tele_sprite
	cleffect tempent set_current_prop death_delay 	2.0
	cleffect tempent set_current_prop fadeout 	lifetime
	cleffect tempent set_current_prop scale 	3.0
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop gravity 	0
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	TN_TELE_FRAMES
}

{ titan_hand_sprite_setup
	cleffect tempent set_current_prop death_delay 	1.0
	cleffect tempent set_current_prop fadeout 	0.5
	cleffect tempent set_current_prop scale 	2.0
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop gravity 	1.0
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	1
}

//==== GENERIC STOMP EFFECT
//- for scripts that save some ents by not using the stun fx

{ [client] fx_stunburst_go_cl //<pos> <rad>

	const SB_STUN_SPRITE fire1_fixed.spr
	setvard SB_CYCLE_ANGLE 0
	const SB_TOTAL_OFS 10
	setvard SB_STUN_POS PARAM1
	setvard SB_STUN_RADIUS PARAM2

	//dbg **** fx_stunburst_go_cl SB_STUN_POS SB_STUN_RADIUS

	sound.play3d magic/boom.wav 10 SB_STUN_POS

	local POS_GROUND $get_ground_height(SB_STUN_POS)
	vectorset STUN_POS z POS_GROUND

	calleventloop 17 fx_stun_burst_fx
}

{ [client] fx_stun_burst_fx

	local FLAME_POS SB_STUN_POS
	vectoradd FLAME_POS $relpos($vec(0,SB_CYCLE_ANGLE,0),$vec(0,SB_TOTAL_OFS,0))
	cleffect tempent sprite SB_STUN_SPRITE FLAME_POS fx_stunburst_flame

	add SB_CYCLE_ANGLE 20
}

{ [client] fx_stunburst_flame

	local SB_FADE_DEL 1.0
	local SB_SPRITE_SPEED 100
	if ( SB_STUN_RADIUS > 128 )
	{
		local SB_FADE_DEL 2.0
		local SB_SPRITE_SPEED 400
	}

	cleffect tempent set_current_prop death_delay 	SB_FADE_DEL
	cleffect tempent set_current_prop rendercolor (0,0,255)
	cleffect tempent set_current_prop renderamt	200
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	23
	cleffect tempent set_current_prop scale 	1.0
	cleffect tempent set_current_prop gravity 	0

	local SB_FLAME_TURN $relvel($vec(0,SB_CYCLE_ANGLE,0),$vec(0,SB_SPRITE_SPEED,0))
	cleffect tempent set_current_prop velocity SB_FLAME_TURN
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop fadeout lifetime
}

{ set_view_dist
	setenv maxviewdist PARAM1
}

{ fx_spark //<spark_loc>
	cleffect spark PARAM1

	if FX_SMITH_EFFECTS

	if ( FX_SMITH_TYPE contains dark )
	{
		local SPR_POS PARAM1
		vectoradd SPR_POS z 20
		cleffect tempent sprite FX_SMITH_SPRITE SPR_POS fx_smith_setup_dark_sprite
		sound.play3d magic/spookie1.wav 10 PARAM1
	}

	if ( FX_SMITH_TYPE contains fire )
	{
		local SPR_POS PARAM1
		vectoradd SPR_POS z 5
		cleffect tempent model weapons/projectiles.mdl SPR_POS fx_smith_setup_fire_sprite fx_smith_update_fire_sprite
		sound.play3d magic/volcano_start.wav 10 PARAM1
	}

	if ( FX_SMITH_TYPE contains ice )
	{
		local SPR_POS PARAM1
		vectoradd SPR_POS z 20
		cleffect tempent sprite FX_SMITH_ICESPRITE SPR_POS fx_smith_setup_ice_sprite
		sound.play3d magic/freeze.wav 10 PARAM1
	}
}

{ fx_smith_effect //<type> [dark_sprite] [ice_sprite]
	if ( PARAM1 equals end )
	{
		setvard FX_SMITH_EFFECTS 0
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	setvard FX_SMITH_EFFECTS 1
	setvard FX_SMITH_TYPE PARAM1

	//we're passing these sprites via strings to make sure they don't precache when not required
	setvard FX_SMITH_SPRITE PARAM2
	setvard FX_SMITH_ICESPRITE PARAM3
}

{ fx_smith_setup_fire_sprite
	cleffect tempent set_current_prop death_delay 1.0
	cleffect tempent set_current_prop body 51
	cleffect tempent set_current_prop framerate 0.5
	cleffect tempent set_current_prop sequence 8
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop renderamt 100
	cleffect tempent set_current_prop gravity 0
	cleffect tempent set_current_prop collide none
	cleffect tempent set_current_prop frames 11
	cleffect tempent set_current_prop angles $vec(0,90,0)
	cleffect tempent set_current_prop velocity $vec(0,0,0)
	cleffect tempent set_current_prop movetype 0
	cleffect tempent set_current_prop scale 1.25
	cleffect tempent set_current_prop fuser1 1.25
}

{ fx_smith_update_fire_sprite
	local CUR_SIZE game.tempent.fuser1
	subtract CUR_SIZE 0.01
	if CUR_SIZE > 0
	cleffect tempent set_current_prop fuser1 CUR_SIZE
	cleffect tempent set_current_prop scale CUR_SIZE
}

{ fx_smith_setup_dark_sprite
	cleffect tempent set_current_prop death_delay 	1.0
	cleffect tempent set_current_prop fadeout 	lifetime
	cleffect tempent set_current_prop scale 	0.75
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop gravity 	0
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	17
}

{ fx_smith_setup_ice_sprite
	cleffect tempent set_current_prop death_delay 	1.0
	cleffect tempent set_current_prop fadeout 	lifetime
	cleffect tempent set_current_prop scale 	0.25
	cleffect tempent set_current_prop renderamt	255
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop gravity 	0
	cleffect tempent set_current_prop collide 	none
	cleffect tempent set_current_prop framerate	30
	cleffect tempent set_current_prop frames	1
}

//================= Phlames Staff Viewfinder
{ phlames_viewfinder_on //<owner>
	setvard PHL_OWNER PARAM1
	if !PHL_ON
	setvard PHL_ON 1
	callevent phlames_viewfinder_locator
}

{ phlames_viewfinder_off
	setvard PHL_ON 0
}

{ phlames_viewfinder_locator
	if PHL_ON
	callevent 0.01 phlames_viewfinder_locator

	local L_OWNER_VIEW $getcl(PHL_OWNER,viewangles)
	local L_SEAL_POS $getcl(PHL_OWNER,origin)

	local TRACE_START L_SEAL_POS
	local TRACE_END L_SEAL_POS
	vectoradd TRACE_END $relpos(L_OWNER_VIEW,$vec(0,1000,0))
	local TRACE_LINE $get_traceline(TRACE_START,TRACE_END,clworld)
	vectorset TRACE_LINE z $get_ground_height(TRACE_LINE)

	setvard PHL_POS TRACE_LINE

	if ( $dist(L_SEAL_POS,PHL_POS) > 1024 )
	{
		setvard PHL_HIDE 1
	}
	else
	{
		setvard PHL_HIDE 0
	}

	if game.time > PHL_NEXT_SEAL
	setvard PHL_NEXT_SEAL game.time
	add PHL_NEXT_SEAL 10.0
	cleffect tempent model weapons/magic/seals.mdl PHL_POS phlames_setup_seal phlames_update_seal
}

{ phlames_update_seal
	if ( !PHL_ON ) cleffect tempent set_current_prop origin $vec(10000,10000,10000)

	if PHL_ON
	cleffect tempent set_current_prop origin PHL_POS

	local L_OWNER_ORG $getcl(PHL_OWNER,origin)

	if ( PHL_HIDE )
	{
		cleffect tempent set_current_prop rendermode add
		cleffect tempent set_current_prop renderamt 1
	}
	else
	{
		cleffect tempent set_current_prop rendermode normal
		cleffect tempent set_current_prop renderamt 255
	}

}

{ phlames_setup_seal
 	cleffect tempent set_current_prop death_delay 10.0
	cleffect tempent set_current_prop fade none
	cleffect tempent set_current_prop framerate	1.0
	cleffect tempent set_current_prop gravity 0.0
	cleffect tempent set_current_prop rendermode normal
	cleffect tempent set_current_prop collide none
	cleffect tempent set_current_prop body 1
	cleffect tempent set_current_prop frames 39
}

{ cl_playsound
	playsound 0 10 PARAM1
}

//moving health bar system here MAR2012
{ show_hbar //<origin> <frame> <scale> [index]
	//dbg show_hbar PARAM1 PARAM2 PARAM3 PARAM4
	if ( PARAM2 startswith 'PARAM' )
	{
		//dbg *** show_hbar got bogus frame ( PARAM2 ) $getcl(HBAR_INDEX,isalive)
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	setvard CL_HBAR_POS PARAM1
	setvard CL_HBAR_FRAME PARAM2
	subtract CL_HBAR_FRAME 22 //wtf is going on that we need this? ><
	setvard CL_HBAR_SCALE PARAM3
	setvard CL_HBAR_INDEX PARAM4
	if ( $getcl(CL_HBAR_INDEX,isplayer) )
	{
		if !game.localplayer.thirdperson
		//hopefully this bit stops player from seeing own sprite when looking up
		if game.localplayer.index equals CL_HBAR_INDEX
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	//dbg *** show_hbar CL_HBAR_FRAME pos PARAM1 frm PARAM2 scl PARAM3 idx PARAM4
	cleffect tempent sprite CL_HBAR_SPRITE CL_HBAR_POS setup_hbar
	//setvard HBAR_POS 0
	//setvard HBAR_FRAME 0
	//setvard HBAR_SCALE 0
	//setvard HBAR_INDEX 0
}

{ [client] setup_hbar
	cleffect tempent set_current_prop death_delay	0.9
	cleffect tempent set_current_prop fadeout		lifetime
	cleffect tempent set_current_prop frame			CL_HBAR_FRAME		
	cleffect tempent set_current_prop scale 		CL_HBAR_SCALE
	cleffect tempent set_current_prop rendermode	add
	cleffect tempent set_current_prop renderamt		255
	cleffect tempent set_current_prop gravity 		0.0
	cleffect tempent set_current_prop collide 		none
}

//
{ set_test_beam
	//cleffect beam_points <startpos> <endpos> <spritename> <life> <width> <amplitude> <brightness> <speed> <framerate> <color>
	//$getcl(game.localplayer.viewmodel.active.id,attachment)
	//local BEAM_START game.localplayer.viewmodel.active.id
	//dbg set_test_beam BEAM_START $getcl(BEAM_START,attachment0)
	//cleffect beam_points $getcl(BEAM_START,attachment1) $getcl(PARAM2,origin) lgtning.spr 50.0 10 0.1 0.3 0.1 30 (2,0,2)
	cleffect beam_ents PARAM1 1 PARAM2 1 lgtning.spr 60.0 10 0.1 0.3 0.1 30 (2,1.5,0.25)
	//setvard TEST_BEAM_ON 1
	//setvard TEST_BEMA_TARG PARAM2
}
//
//{ game_prerender
//	if TEST_BEAM_ON
//	local BEAM_START game.localplayer.viewmodel.active.id
//	cleffect beam_points $getcl(BEAM_START,attachment1) $getcl(TEST_BEMA_TARG,origin) lgtning.spr 0.001 10 0.1 0.3 0.1 30 (2,0,2)
//}

{ cl_playsound //<sound> <vol> <loc>
	sound.play3d PARAM1 PARAM2 PARAM3
}

{ cl_svplaysound //<chan> <vol> <sound> <origin>
	sound.play3d PARAM3 PARAM2 PARAM4 PARAM1
}

{ game_cl_playsound
	dbg *** game_cl_playsound PARAM3 PARAM2 PARAM4 PARAM1
	sound.play3d PARAM3 PARAM2 PARAM4 PARAM1
}

{ lightsys_render_lights

	local L_CUR_LIGHT_COLOR $get_array(ARRAY_LIGHT_COLOR,game.script.iteration)
	if L_CUR_LIGHT_COLOR != -1

	local L_CUR_LIGHT_OWNER $int(game.script.iteration)
	local L_CUR_LIGHT_RAD $get_array(ARRAY_LIGHT_RAD,game.script.iteration)
	local L_CUR_LIGHT_POS $getcl(L_CUR_LIGHT_OWNER,origin)
	local L_CUR_LIGHT_ID $get_array(ARRAY_LIGHT_IDLIST,game.script.iteration)
	cleffect light L_CUR_LIGHT_ID L_CUR_LIGHT_POS L_CUR_LIGHT_RAD L_CUR_LIGHT_COLOR 1.0

	if ( game.time > NEXT_LIGHT_DEBUG )
	{
		setvard NEXT_LIGHT_DEBUG game.time
		add NEXT_LIGHT_DEBUG 5.0
		//dbg ** cl_track_lights id L_CUR_LIGHT_ID own L_CUR_LIGHT_OWNER pos L_CUR_LIGHT_POS
	}
}

{ cl_light_update //<new|remove|update|clear> <owner_index> <color> <rad>

	local L_ACTION PARAM1
	local L_OWNER PARAM2
	local L_COLOR PARAM3
	local L_RAD PARAM4

	//dbg cl_light_update act L_ACTION own L_OWNER col L_COLOR rad L_RAD

	if ( !game.cvar.ms_showotherglow ) //If player doesnt want to see other player's glows
	{
		if ( L_OWNER isnot game.localplayer.index ) exitevent //Check if this is my glow or not. If it's not my glow, then dont turn it on.
	}
	
	local L_PLAYER_IDX L_OWNER

	if ( L_ACTION equals new )
	{
		setvard LIGHTSYS_TRACK_LIGHTS 1
		if ( !LIGHTSYS_INITIALIZED )
		{
			calleventloop LIGHTSYS_N_LIGHTS lightsys_make_lights
			setvard LIGHTSYS_INITIALIZED 1
			//dbg cl_light_update initlights for L_PLAYER_IDX fidx $get_arrayfind(ARRAY_LIGHT_COLOR,L_PLAYER_IDX)
		}

		if ( $get_array(ARRAY_LIGHT_COLOR,L_PLAYER_IDX) == -1 )
		{
			cleffect light new $getcl(L_OWNER,origin) L_COLOR L_RAD 5.0
			local L_LIGHT_ID game.script.last_light_id
			array.set ARRAY_LIGHT_IDLIST L_PLAYER_IDX L_LIGHT_ID
			array.set ARRAY_LIGHT_COLOR L_PLAYER_IDX L_COLOR
			array.set ARRAY_LIGHT_RAD L_PLAYER_IDX L_RAD
			//dbg cl_light_update new light for player L_PLAYER_IDX [ L_LIGHT_ID ]
		}
		else
		{
			//check if owner's light already on, just go to update
			local L_ACTION update
		}
	}

	if ( L_ACTION equals update )
	{
		array.set ARRAY_LIGHT_COLOR L_PLAYER_IDX L_COLOR
		array.set ARRAY_LIGHT_RAD L_PLAYER_IDX L_RAD
		setvard LIGHTSYS_TRACK_LIGHTS 1
		//dbg cl_light_update update for L_PLAYER_IDX
	}

	if ( L_ACTION equals remove )
	{
		//dbg cl_light_update removing player light L_PLAYER_IDX
		array.set ARRAY_LIGHT_COLOR L_PLAYER_IDX -1
		array.set ARRAY_LIGHT_IDLIST L_PLAYER_IDX -1
		array.set ARRAY_LIGHT_RAD L_PLAYER_IDX -1
		setvard LIGHTSYS_ANY_VALID 0
		calleventloop LIGHTSYS_N_LIGHTS lightsys_check_valid_lights
		if ( !LIGHTSYS_ANY_VALID )
		{
			//dbg cl_light_update no valid lights, stop tracking
			setvard LIGHTSYS_TRACK_LIGHTS 0
		}
	}

	//remove all lights pending re-sync
	if ( L_ACTION equals clear )
	{
		//dbg cl_light_update clearing all lights
		calleventloop LIGHTSYS_N_LIGHTS lightsys_light_remove
	}
}

{ lightsys_dumplights
	calleventloop LIGHTSYS_N_LIGHTS lightsys_dumplights_loop
}

{ lightsys_dumplights_loop
	local CUR_IDX game.script.iteration
	dbg $int(CUR_IDX) $get_array(ARRAY_LIGHT_IDLIST,CUR_IDX)  $get_array(ARRAY_LIGHT_COLOR,CUR_IDX) $get_array(ARRAY_LIGHT_RAD,CUR_IDX) 
}

{ lightsys_make_lights
	//array.add ARRAY_LIGHT_OWNERLIST $int(game.script.iteration)
	array.add ARRAY_LIGHT_IDLIST -1
	array.add ARRAY_LIGHT_COLOR -1
	array.add ARRAY_LIGHT_RAD -1
}

{ lightsys_check_valid_lights
	local L_CUR_LIGHT $get_array(ARRAY_LIGHT_COLOR,game.script.iteration)
	if L_CUR_LIGHT isnot -1
	setvard LIGHTSYS_ANY_VALID 1
}

{ lightsys_light_remove
	local CUR_IDX game.script.iteration		
	array.set ARRAY_LIGHT_COLOR CUR_IDX -1
	array.set ARRAY_LIGHT_RAD CUR_IDX 0
	array.set ARRAY_LIGHT_IDLIST CUR_IDX 0
}

{ cl_tele1_fx //<origin> (from player/externals for teleport-in fx)
	setvard CL_TELE1_ORG PARAM1
	sound.play3d debris/beamstart1.wav 10 CL_TELE1_ORG
	//setvard CL_TELE1_V_ADJ 0
	callevent cl_tele1_fx_go
	callevent 0.2 cl_tele1_fx_go
	callevent 0.4 cl_tele1_fx_go

	cleffect light new CL_TELE1_ORG 128 (255,0,0) 2.0
}

{ cl_tele1_fx_go
	cleffect tempent model weapons/projectiles.mdl CL_TELE1_ORG cl_tele1_fx_sprite
}

{ cl_tele1_fx_sprite
	cleffect tempent set_current_prop death_delay 1.0
	cleffect tempent set_current_prop body 54
	cleffect tempent set_current_prop framerate 1.0
	cleffect tempent set_current_prop sequence 8
	cleffect tempent set_current_prop rendermode add
	cleffect tempent set_current_prop rendercolor (255,0,255)
	cleffect tempent set_current_prop renderamt 255
	cleffect tempent set_current_prop scale 0.3
	cleffect tempent set_current_prop fuser1 0.1
	cleffect tempent set_current_prop gravity -0.3
	cleffect tempent set_current_prop collide none

	cleffect tempent set_current_prop frames 11
	cleffect tempent set_current_prop fadeout lifetime
	cleffect tempent set_current_prop angles $vec(0,90,0)
	cleffect tempent set_current_prop velocity $vec(0,0,0)
	cleffect tempent set_current_prop movetype 0
}

{ cl_metal_cave_light //<model_index>

	if !SFX_METAL_CAVE_LIGHT_ACTIVE //already setup

	setvard SFX_METAL_CAVE_MDL PARAM1

	setvard SFX_R_CYCLE 254
	setvard SFX_G_CYCLE 1
	setvard SFX_B_CYCLE 254

	setvard SFX_R_CYCLE_PM 0.02
	setvard SFX_G_CYCLE_PM -0.02
	setvard SFX_B_CYCLE_PM 0.02

	cleffect light new $getcl(SFX_METAL_CAVE_MDL,origin) 768 (255,0,255) 5.0
	setvard SFX_METAL_CAVE_LIGHT game.script.last_light_id
	setvard SFX_METAL_CAVE_LIGHT_ACTIVE 1
}

{ cl_metal_cave_light_end
	setvard SFX_METAL_CAVE_LIGHT_ACTIVE 0
}

{ cl_metal_cave_cycle

	local L_CYCLE SFX_R_CYCLE_PM
	multiply L_CYCLE $randf(1,2)
	add SFX_R_CYCLE L_CYCLE
	if ( SFX_R_CYCLE < 0 )
	{
		multiply SFX_R_CYCLE_PM -1
		setvard SFX_R_CYCLE 0
	}
	if ( SFX_R_CYCLE > 255 )
	{
		multiply SFX_R_CYCLE_PM -1
		setvard SFX_R_CYCLE 255
	}

	local L_CYCLE SFX_G_CYCLE_PM
	multiply L_CYCLE $randf(1,2)
	add SFX_G_CYCLE L_CYCLE
	if ( SFX_G_CYCLE < 0 )
	{
		multiply SFX_G_CYCLE_PM -1
		setvard SFX_G_CYCLE 0
	}
	if ( SFX_G_CYCLE > 255 )
	{
		multiply SFX_G_CYCLE_PM -1
		setvard SFX_G_CYCLE 255
	}

	local L_CYCLE SFX_B_CYCLE_PM
	multiply L_CYCLE $randf(1,2)
	add SFX_B_CYCLE L_CYCLE
	if ( SFX_B_CYCLE < 0 )
	{
		multiply SFX_B_CYCLE_PM -1
		setvard SFX_B_CYCLE 0
	}
	if ( SFX_B_CYCLE > 255 )
	{
		multiply SFX_B_CYCLE_PM -1
		setvard SFX_B_CYCLE 255
	}

	local L_COLOR $vec($int(SFX_R_CYCLE),$int(SFX_G_CYCLE),$int(SFX_B_CYCLE))

	//dbg cl_metal_cave_cycle L_COLOR

	cleffect light SFX_METAL_CAVE_LIGHT $getcl(SFX_METAL_CAVE_MDL,origin) 768 L_COLOR 1.0
}


{ s_test //<range> <flags>
	local L_PLR game.localplayer.index
	local L_PLR_ORG $getcl(L_PLR,origin)
	local L_SCAN_RAD PARAM1
	if ( PARAM2 !startswith PARAM ) local SCAN_FLAGS PARAM2

	local SCAN_RESULT $getcl_tsphere(L_PLR_ORG,L_SCAN_RAD,SCAN_FLAGS)
	dbg s_test SCAN_RESULT
}

{ cl_set_height
	dbg cl_set_height PARAM1
	setvard game.cleffect.view_ofs.z PARAM1
}

{ ext_sbfollow
	//. clme ext_sbfollow
	local L_VIEWMODEL_IDX game.localplayer.viewmodel.active.id
	local L_ATTACH 1
	if ( PARAM1 !startswith PARAM ) local L_VIEWMODEL_IDX PARAM1
	if ( PARAM2 !startswith PARAM ) local L_ATTACH PARAM2
	cleffect beam_follow L_VIEWMODEL_IDX L_ATTACH lgtning.spr 20.0 30 (1,0,0) 1
	dbg *** ext_sbfollow PARAM1 PARAM2 [ game.script.last_beam_id ]
	setvard CYCLE_BEAM game.script.last_beam_id
}

{ ext_sbent
	//. clme ext_sbent <ent> <at1> <at2>
	local L_VIEWMODEL_IDX game.localplayer.viewmodel.active.id
	local L_ATTACH1 1
	local L_ATTACH2 2
	if ( PARAM1 !startswith PARAM ) local L_VIEWMODEL_IDX PARAM1
	if ( PARAM2 !startswith PARAM ) local L_ATTACH1 PARAM2
	if ( PARAM3 !startswith PARAM ) local L_ATTACH2 PARAM3
	cleffect beam_ents L_VIEWMODEL_IDX L_ATTACH1 L_VIEWMODEL_IDX L_ATTACH2 lgtning.spr 20.0 5 1 0.5 100 30 (1,0,1)
	dbg *** ext_sbent PARAM1 PARAM2 PARAM3 [ game.script.last_beam_id ]
	setvard CYCLE_BEAM game.script.last_beam_id
}

{ ext_sbents
	//. clme ext_sbents <ent> <ent>
	local L_ENT1 PARAM1
	local L_ENT2 PARAM2
	cleffect beam_ents L_ENT1 0 L_ENT2 0 lgtning.spr 120.0 5 1 255 100 30 (255,0,255)
	dbg *** ext_sbent PARAM1 PARAM2 [ game.script.last_beam_id ] [ GAME_BULLSHIT ]
	setvard CYCLE_BEAM game.script.last_beam_id
}

{ edit_beam //<prop> <value>
	//. clme edit_beam color "(1,0.5,2)"
	//. clme edit_beam brightness 0.3
	cleffect beam_update CYCLE_BEAM PARAM1 PARAM2
}

{ get_beam //<prop>
	dbg *** beamprop PARAM1 is $getcl_beam(CYCLE_BEAM,PARAM1)
}

{ clear_beams
	dbg *** clear_beams
	cleffect beam_update removeall
}

{ change_sky //<skyname>
	//. clme change_sky ax_darkclouds_
	setenv sky.texture PARAM1
}

{ cl_show_text //<text_name>
	
	localmenu.reset

	local reg.local.menu.title "Test title"
	registerlocal.menu

	local reg.local.button.text 'Button1'
	local reg.local.button.closeonclick 0
	local reg.local.button.enabled 1
	local reg.local.button.docallback 1
	local reg.local.button.callback cb_test1
	registerlocal.button

	local reg.local.button.text 'Button2'
	local reg.local.button.closeonclick 1
	local reg.local.button.enabled 0
	local reg.local.button.docallback 0
	local reg.local.button.callback cb_test1
	registerlocal.button

	local reg.local.button.text 'Button3'
	local reg.local.button.closeonclick 1
	local reg.local.button.enabled 1
	local reg.local.button.docallback 0
	registerlocal.button

	local reg.local.paragraph.source.type 'local'
	local reg.local.paragraph.source '#LOCALPAGE_TEST1'
	registerlocal.paragraph

	consolemsg ent_me "OPENING"

	localmenu.open
}

{ cb_test1
	localmenu.close
}

{ cb_test2

}

{ spawn_corpse //<idx> <anim_idx> <renderprops:scale;rendermode;renderamt;bodyidx;skin>

	setvard CORPSE_ANG $getcl(PARAM1,angles)

	setvard CORPSE_ANIM_IDX PARAM2

	setvard CORPSE_SCALE $get_token(PARAM3,0)
	if ( CORPSE_SCALE == 0 ) setvard CORPSE_SCALE 1

	setvard L_INRENDER $get_token(PARAM3,1)
	setvard CORPSE_RENDERMODE normal
	if ( L_INRENDER == 2 ) setvard CORPSE_RENDERMODE texture
	if ( L_INRENDER == 5 ) setvard CORPSE_RENDERMODE add

	setvard CORPSE_RENDERAMT $get_token(PARAM3,2)
	if ( CORPSE_RENDERAMT == 0 ) setvard CORPSE_RENDERAMT 255

	setvard CORPSE_BODY_IDX  $get_token(PARAM3,3)
	setvard CORPSE_SKIN $get_token(PARAM3,4)

	dbg *** clplayer spawn_corpse PARAM1 PARAM2 model: $getcl(PARAM1,model) scale: CORPSE_SCALE rmode: CORPSE_RENDERMODE ramt: CORPSE_RENDERAMT bodyidx: CORPSE_BODY_IDX origin: $getcl(PARAM1,origin)

	cleffect tempent model $getcl(PARAM1,model) $getcl(PARAM1,origin) setup_corpse
}

{ setup_corpse
	cleffect tempent set_current_prop death_delay 20.0
	cleffect tempent set_current_prop scale CORPSE_SCALE
	cleffect tempent set_current_prop gravity 1
	cleffect tempent set_current_prop velocity (0,0,-50)
	cleffect tempent set_current_prop collide world
	cleffect tempent set_current_prop framerate 1.0
	cleffect tempent set_current_prop frames 50
	cleffect tempent set_current_prop body CORPSE_BODY_IDX
	cleffect tempent set_current_prop sequence CORPSE_ANIM_IDX
	cleffect tempent set_current_prop angles CORPSE_ANG
	cleffect tempent set_current_prop rendermode CORPSE_RENDERMODE
	cleffect tempent set_current_prop renderamt CORPSE_RENDERAMT
	cleffect tempent set_current_prop skin CORPSE_SKIN
}

{ cl_array_test
	if ( !SETUP_TEST_ARRAY )
	{
		array.create ARRAY_TEST
		setvard SETUP_TEST_ARRAY 1
	}

	array.add ARRAY_TEST "yes"
}
