//Includes functionality relating to displaying help information for players

{
	//map list by difficulty
	//consider moving to book function
	setvard LISTMAPS_MSG_LOW "=========== Low level maps (up to ~200hp) ==========="
	setvard LISTMAPS_MSG_MED "=========== Medium level maps (~150hp-600hp) ==========="
	setvard LISTMAPS_MSG_HAR "=========== Hard level maps (~600hp-1000hp) ==========="
	setvard LISTMAPS_MSG_VHR "=========== Very Hard level maps (~1000hp-1500hp) ==========="
	setvard LISTMAPS_MSG_EPC "=========== Epic level maps (>1500hp + Apostle) ==========="

	array.create ARRAY_MAPLIST_LOW 
	array.add ARRAY_MAPLIST_LOW "deralia (safe)"
	array.add ARRAY_MAPLIST_LOW "edana (safe)"
	array.add ARRAY_MAPLIST_LOW "ms_town (safe)"
	array.add ARRAY_MAPLIST_LOW "helena (safe, except during raids, where it can self-adjust up to medium)"
	array.add ARRAY_MAPLIST_LOW "ms_quest (almost safe)"
	array.add ARRAY_MAPLIST_LOW "msc_tutorial (can technically complete without combat)"
	array.add ARRAY_MAPLIST_LOW "edanasewers"
	array.add ARRAY_MAPLIST_LOW "thornlands (spitting spiders can be a bit mean)"
	array.add ARRAY_MAPLIST_LOW "ms_caves (empty, save for a thornlands boss spider)"
	array.add ARRAY_MAPLIST_LOW "gertenheld_cape"
	array.add ARRAY_MAPLIST_LOW "chapel (beware under the church floorboards)"
	array.add ARRAY_MAPLIST_LOW "mines"
	array.add ARRAY_MAPLIST_LOW "ms_swamp (empty, save for a few skeletons)"
	array.add ARRAY_MAPLIST_LOW "challs"
	array.add ARRAY_MAPLIST_LOW "goblintown (hidden)"
	array.add ARRAY_MAPLIST_LOW "island1"
	array.add ARRAY_MAPLIST_LOW "m2_quest"
	array.add ARRAY_MAPLIST_LOW "gertenheld_forest (beware of goblin cheif)"
	array.add ARRAY_MAPLIST_LOW "heras (beware of lobbing troll)"
	array.add ARRAY_MAPLIST_LOW "sfor (up to glowing slime forest area)"
	array.add ARRAY_MAPLIST_LOW "gatecity (above dzombie area) (hidden)"
	array.add ARRAY_MAPLIST_LOW "mscave (beware fire shamans)"
	array.add ARRAY_MAPLIST_LOW "isle (beware lobbing trolls and hidden brawler)"
	array.add ARRAY_MAPLIST_LOW "lowlands (start of 'Curse of the Bear Gods' series)"

	array.create ARRAY_MAPLIST_MEDIUM
	array.add ARRAY_MAPLIST_MEDIUM "keledrosprelude2 (Beware the Ice Troll)"
	array.add ARRAY_MAPLIST_MEDIUM "orcplace2_beta ('Curse of the Bear Gods', starts at lowlands)"
	array.add ARRAY_MAPLIST_MEDIUM "smugglers_cove"
	array.add ARRAY_MAPLIST_MEDIUM "daragoth (beware trolls)"
	array.add ARRAY_MAPLIST_MEDIUM "sfor (beyond slime forest area)"
	array.add ARRAY_MAPLIST_MEDIUM "orc_for (self-adjusted low)"
	array.add ARRAY_MAPLIST_MEDIUM "ms_underworldv2 (crappy throw-back map)"
	array.add ARRAY_MAPLIST_MEDIUM "ww1 (Start of 'World Walker' series)"
	array.add ARRAY_MAPLIST_MEDIUM "ww2b ('World Walker', starts at ww1)"
	array.add ARRAY_MAPLIST_MEDIUM "keledrosruins (hidden)"
	array.add ARRAY_MAPLIST_MEDIUM "unrest"
	array.add ARRAY_MAPLIST_MEDIUM "unrest2_beta1"
	array.add ARRAY_MAPLIST_MEDIUM "calruin2"
	array.add ARRAY_MAPLIST_MEDIUM "highlands_msc ('Curse of the Bear Gods', starts at lowlands)"
	array.add ARRAY_MAPLIST_MEDIUM "lostcastle_msc ('Curse of the Bear Gods', starts at lowlands)"
	array.add ARRAY_MAPLIST_MEDIUM "keledrosprelude2 (Ice Troll Battle)"
	array.add ARRAY_MAPLIST_MEDIUM "b_castle"
	array.add ARRAY_MAPLIST_MEDIUM "gatecity (dzombie area) (hidden)"
	array.add ARRAY_MAPLIST_MEDIUM "lostcaverns"
	array.add ARRAY_MAPLIST_MEDIUM "ara (long siege is long)"
	array.add ARRAY_MAPLIST_MEDIUM "bloodrose (up through Slithar)"
	array.add ARRAY_MAPLIST_MEDIUM "Cleicert"
	array.add ARRAY_MAPLIST_MEDIUM "ww3d ('World Walker', starts at ww1)"
	array.add ARRAY_MAPLIST_MEDIUM "idemarks_tower"
	array.add ARRAY_MAPLIST_MEDIUM "skycastle ('Curse of the Bear Gods', starts at lowlands)"
	array.add ARRAY_MAPLIST_MEDIUM "demontemple"
	array.add ARRAY_MAPLIST_MEDIUM "the_keep (random final boss maybe mean though)"
	array.add ARRAY_MAPLIST_MEDIUM "ms_snow"
	array.add ARRAY_MAPLIST_MEDIUM "foutpost"
	array.add ARRAY_MAPLIST_MEDIUM "oceancrossing"
	array.add ARRAY_MAPLIST_MEDIUM "ms_wicardoven"
	array.add ARRAY_MAPLIST_MEDIUM "islesofdread1"
	array.add ARRAY_MAPLIST_MEDIUM "islesofdread2_old"
	array.add ARRAY_MAPLIST_MEDIUM "nightmare_edana (self-adjusts medium-hard)"
	array.add ARRAY_MAPLIST_MEDIUM "catacombs (self-adjusts medium-hard)"
	array.add ARRAY_MAPLIST_MEDIUM "dragooncaves"
	array.add ARRAY_MAPLIST_MEDIUM "islesofdread2"
	array.add ARRAY_MAPLIST_MEDIUM "bloodrose (after Slithar)"
	array.add ARRAY_MAPLIST_MEDIUM "underpath (self adjusted low)"
	array.add ARRAY_MAPLIST_MEDIUM "fmines (self adjusted low)"
	array.add ARRAY_MAPLIST_MEDIUM "rmines (self adjusted low)"
	array.add ARRAY_MAPLIST_MEDIUM "thanatos"
	array.add ARRAY_MAPLIST_MEDIUM "lodagond-2 ('Lodagond' series, starts at Lodagond-1)"
	array.add ARRAY_MAPLIST_MEDIUM "nightmare_thornlands"
	array.add ARRAY_MAPLIST_MEDIUM "phobia (beware final boss)"

	array.create ARRAY_MAPLIST_HARD
	array.add ARRAY_MAPLIST_HARD "aleyesu"
	array.add ARRAY_MAPLIST_HARD "lodagond-3 ('Lodagond' series, starts at Lodagond-1)"
	array.add ARRAY_MAPLIST_HARD "old_helena"
	array.add ARRAY_MAPLIST_HARD "aluhandra2"
	array.add ARRAY_MAPLIST_HARD "gertenheld_cave"
	array.add ARRAY_MAPLIST_HARD "lodagond-1 (start of 'Lodagond' series)"
	array.add ARRAY_MAPLIST_HARD "deraliasewers"
	array.add ARRAY_MAPLIST_HARD "catacombs (self-adjusts medium-hard)"
	array.add ARRAY_MAPLIST_HARD "tundra"
	array.add ARRAY_MAPLIST_HARD "umulak"
	array.add ARRAY_MAPLIST_HARD "kfortress"
	array.add ARRAY_MAPLIST_HARD "gertenhell"
	array.add ARRAY_MAPLIST_HARD "orc_for (self-adjusted high)"
	array.add ARRAY_MAPLIST_HARD "lodagond-4 ('Lodagond' series, starts at Lodagond-1)"
	array.add ARRAY_MAPLIST_HARD "undercliffs (self adjusted low)"
	array.add ARRAY_MAPLIST_HARD "underpath (self adjusted high)"
	array.add ARRAY_MAPLIST_HARD "sorc_villa (though safe, in some conditions)"

	array.create ARRAY_MAPLIST_VHARD
	array.add ARRAY_MAPLIST_VHARD "shad_palace"
	array.add ARRAY_MAPLIST_VHARD "bloodshrine"
	array.add ARRAY_MAPLIST_VHARD "fmines (self adjusted high)"
	array.add ARRAY_MAPLIST_VHARD "rmines (self adjusted high)"
	array.add ARRAY_MAPLIST_VHARD "shender_east (self-adjusted min)"
	array.add ARRAY_MAPLIST_VHARD "hunderswamp_north"
	array.add ARRAY_MAPLIST_VHARD "the_wall"
	array.add ARRAY_MAPLIST_VHARD "the_wall2"
	array.add ARRAY_MAPLIST_VHARD "phlames"
	array.add ARRAY_MAPLIST_VHARD "undercliffs (self adjusted high)"
	array.add ARRAY_MAPLIST_VHARD "nashalrath (hidden)"
	array.add ARRAY_MAPLIST_VHARD "shender_east (self-adjusted max, nightmare battle self-adjusts near-epic)"

	array.create ARRAY_MAPLIST_EPIC
	array.add ARRAY_MAPLIST_EPIC "(none available as of yet)"
}

{ game_playercmd

	if ( PARAM1 equals 'listmaps' )
	{
		//dbg listmaps LISTMAPS_TARGET
		if ( LISTMAPS_TARGET isnot 'LISTMAPS_TARGET' )
		{
			if LISTMAPS_TARGET isnot $get(ent_currentplayer,id)
			consolemsg ent_currentplayer One moment, listmaps system is helping $get(LISTMAPS_TARGET,name)
		}
		if ( PARAM2 startswith PARAM )
		{
			local L_HP $get(ent_currentplayer,maxhp)
			if ( L_HP <= 150 )
			{
				setvard LISTMAPS_START low
				setvard LISTMAPS_STOP low
			}
			else if ( L_HP > 150 )
			{
				if ( L_HP > 200 )
				{
					setvard LISTMAPS_START low
					setvard LISTMAPS_STOP medium
				}
				if ( L_HP >= 600 )
				{
					setvard LISTMAPS_START hard
					setvard LISTMAPS_STOP hard
				}
				if ( L_HP >= 800 )
				{
					setvard LISTMAPS_START hard
					setvard LISTMAPS_STOP vhard
				}
				if ( L_HP >= 1500 )
				{
					setvard LISTMAPS_START vhard
					setvard LISTMAPS_STOP epic
				}
			}
			local L_LISTING_CUSTOM 1
			consolemsg ent_currentplayer Listing maps recommended for your character level: LISTMAPS_START to LISTMAPS_STOP
			consolemsg ent_currentplayer To list more maps, try listmaps [difficulty] or listmaps all
		}
		else
		{
			setvard LISTMAPS_START none
			setvard LISTMAPS_STOP none
			if ( PARAM2 equals low )
			{
				setvard LISTMAPS_START low
				setvard LISTMAPS_STOP low
			}
			if ( PARAM2 equals medium )
			{
				setvard LISTMAPS_START medium
				setvard LISTMAPS_STOP medium
			}
			if ( PARAM2 equals hard )
			{
				setvard LISTMAPS_START hard
				setvard LISTMAPS_STOP hard
			}
			if ( PARAM2 equals vhard )
			{
				setvard LISTMAPS_START vhard
				setvard LISTMAPS_STOP vhard
			}
			if ( PARAM2 equals epic )
			{
				setvard LISTMAPS_START epic
				setvard LISTMAPS_STOP epic
			}
			if ( PARAM2 equals all )
			{
				setvard LISTMAPS_START low
				setvard LISTMAPS_STOP epic
			}
		}

		if ( LISTMAPS_START isnot none )
		{
			if ( !L_LISTING_CUSTOM )
			{
				if ( PARAM2 !equals all ) consolemsg ent_currentplayer Listing maps recomended for LISTMAPS_START levels
				else consolemsg ent_currentplayer Listing all maps by difficulty
			}
			setvard LISTMAPS_TARGET $get(ent_currentplayer,id)
			callevent do_listmaps
		}
		else
		{
			setvard LISTMAPS_TARGET 'LISTMAPS_TARGET'
			consolemsg ent_currentplayer listmaps, unrecognized parameter: PARAM2
			consolemsg ent_currentplayer listmaps [low|medium|hard|vhard|epic|all]
		}
	}
	else if ( PARAM1 equals 'summon_help' )
	{
		consolemsg ent_currentplayer "SUMMON CHAT COMMANDS"
		consolemsg ent_currentplayer "follow - disengage and follow you"
		consolemsg ent_currentplayer "defend - stay near, engage nearby enemies"
		consolemsg ent_currentplayer "kill - attack your current target"
		consolemsg ent_currentplayer "hunt - roam away and attack any enemies"
		consolemsg ent_currentplayer "vanish - unsummon"
		consolemsg ent_currentplayer "stay - guard position"
		consolemsg ent_currentplayer "* Prefix any of the above commands with all [command] to affect all your summons"
		exitevent
	}
	else if ( PARAM1 equals 'mapinfo' )
	{
		consolemsg ent_currentplayer Map Title: game.map.title
		consolemsg ent_currentplayer Map Desc: game.map.desc
		consolemsg ent_currentplayer HPWarn: game.map.hpwarn
		consolemsg ent_currentplayer Weather: game.map.weather
		exitevent
	}
}

{ do_listmaps
	setvard LISTMAPS_COUNT 0
	if ( LISTMAPS_START equals low )
	{
		consolemsg LISTMAPS_TARGET LISTMAPS_MSG_LOW
		callevent 0.1 do_listmaps_low
	}
	if ( LISTMAPS_START equals medium )
	{
		consolemsg LISTMAPS_TARGET LISTMAPS_MSG_MED
		callevent 0.1 do_listmaps_medium
	}
	if ( LISTMAPS_START equals hard )
	{
		consolemsg LISTMAPS_TARGET LISTMAPS_MSG_HAR
		callevent 0.1 do_listmaps_hard
	}
	if ( LISTMAPS_START equals vhard )
	{
		consolemsg LISTMAPS_TARGET LISTMAPS_MSG_VHR
		callevent 0.1 do_listmaps_vhard
	}
	if ( LISTMAPS_START equals epic )
	{
		consolemsg LISTMAPS_TARGET LISTMAPS_MSG_EPC
		callevent 0.1 do_listmaps_epic
	}
}

{ do_listmaps_low
	if LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_LOW)

	consolemsg LISTMAPS_TARGET $get_array(ARRAY_MAPLIST_LOW,LISTMAPS_COUNT)
	add LISTMAPS_COUNT 1

	if ( LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_LOW) )
	{
		callevent 0.1 do_listmaps_low
	}
	else
	{
		if ( LISTMAPS_STOP isnot low )
		{
			setvard LISTMAPS_COUNT 0
			consolemsg LISTMAPS_TARGET LISTMAPS_MSG_MED
			callevent do_listmaps_medium
		}
		else
		{
			setvard LISTMAPS_TARGET 'LISTMAPS_TARGET'
		}

	}
}

{ do_listmaps_medium
	if LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_MEDIUM)

	consolemsg LISTMAPS_TARGET $get_array(ARRAY_MAPLIST_MEDIUM,LISTMAPS_COUNT)
	add LISTMAPS_COUNT 1

	if ( LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_MEDIUM) )
	{
		callevent 0.1 do_listmaps_medium
	}
	else
	{
		if ( LISTMAPS_STOP isnot medium )
		{
			setvard LISTMAPS_COUNT 0
			consolemsg LISTMAPS_TARGET LISTMAPS_MSG_HAR
			callevent do_listmaps_hard
		}
		else
		{
			setvard LISTMAPS_TARGET 'LISTMAPS_TARGET'
		}
	}
}

{ do_listmaps_hard
	if LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_HARD)

	consolemsg LISTMAPS_TARGET $get_array(ARRAY_MAPLIST_HARD,LISTMAPS_COUNT)
	add LISTMAPS_COUNT 1

	if ( LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_HARD) )
	{
		callevent 0.1 do_listmaps_hard
	}
	else
	{
		if ( LISTMAPS_STOP isnot hard )
		{
			setvard LISTMAPS_COUNT 0
			consolemsg LISTMAPS_TARGET LISTMAPS_MSG_VHR
			callevent do_listmaps_vhard
		}
		else
		{
			setvard LISTMAPS_TARGET 'LISTMAPS_TARGET'
		}

	}
}

{ do_listmaps_vhard
	if LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_VHARD)

	consolemsg LISTMAPS_TARGET $get_array(ARRAY_MAPLIST_VHARD,LISTMAPS_COUNT)
	add LISTMAPS_COUNT 1

	if ( LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_VHARD) )
	{
		callevent 0.1 do_listmaps_vhard
	}
	else
	{
		if ( LISTMAPS_STOP isnot vhard )
		{
			setvard LISTMAPS_COUNT 0
			consolemsg LISTMAPS_TARGET LISTMAPS_MSG_EPC
			callevent do_listmaps_epic
		}
		else
		{
			setvard LISTMAPS_TARGET 'LISTMAPS_TARGET'
		}

	}
}

{ do_listmaps_epic
	if LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_EPIC)

	consolemsg LISTMAPS_TARGET $get_array(ARRAY_MAPLIST_EPIC,LISTMAPS_COUNT)
	add LISTMAPS_COUNT 1

	if ( LISTMAPS_COUNT < $get_array_amt(ARRAY_MAPLIST_EPIC) )
	{
		callevent 0.1 do_listmaps_epic
	}
	else
	{
		setvard LISTMAPS_TARGET 'LISTMAPS_TARGET'
	}
}

{ list_custom_maps2
	local TOTAL_MAPS $get_token_amt(MAPS_UNCONNECTED2)
	subtract TOTAL_MAPS 1
//	if ( CUSTOM_COUNT == TOTAL_MAPS )
//	{
//		if MAPS_UNCONNECTEDS > 2
//		setvard CUSTOM_COUNT 0
//		callevent 0.1 list_custom_maps3
//		local EXIT_SUB 1
//	}
//	if !EXIT_SUB
	if CUSTOM_COUNT <= TOTAL_MAPS
	local CUST_MAP $get_token(MAPS_UNCONNECTED2,CUSTOM_COUNT)
	if ( $map_exists(CUST_MAP) ) consolemsg L_VOTE_CALLER CUST_MAP
	if ( CUSTOM_COUNT == TOTAL_MAPS )
	{
		consolemsg L_VOTE_CALLER ===================================
		consolemsg L_VOTE_CALLER Type listmaps for a listing of maps by difficulty
		consolemsg L_VOTE_CALLER Or type maps * for a listing of all maps on your client
	}
	add CUSTOM_COUNT 1
	callevent 0.1 list_custom_maps2
}