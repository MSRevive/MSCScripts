//Standard Spider

{
	const PARRY_TYPE "dodged!"
   setvard CAN_HEAR 1		//Not a const, because it changes
   if ( ATTACK_HITRANGE equals 'ATTACK_HITRANGE' ) setvard ATTACK_HITRANGE 128
}

#include monsters/base_monster

{  npc_spawn

   race spider
   roam 1
   setidleanim ANIM_IDLE
   setmoveanim ANIM_WALK
	setbbox npcsize //hoping will help with "reach" issues
}

   //Idling
{
   repeatdelay SPIDER_IDLE_DELAY

   if game.monster.alive
   if !SPIDER_LATCHED

   playsound game.sound.body SPIDER_IDLE_VOL SOUND_IDLE1
}

   // Deal damage
{  frame_bite1

   local ATTACK_DAMAGE $randf(ATTACK_DAMAGE_LOW,ATTACK_DAMAGE_HIGH)
   xdodamage ent_lastseen ATTACK_HITRANGE ATTACK_DAMAGE ATTACK_ACCURACY ent_me ent_me none pierce dmgevent:bite
}
{  bite1	//backwards compatibility.  the spiders mdls need to be calling frame_bite1
   callevent frame_bite1
}

   //Hit by someone
{  npc_struck
   
   playrandomsound game.sound.body SPIDER_VOLUME SND_STRUCK1 SND_STRUCK2 SND_STRUCK3 SND_STRUCK4 SND_STRUCK5
}

   //Dodge an attack
{  game_parry

   if ANIM_DODGE isnot 'ANIM_DODGE'

   playanim critical ANIM_DODGE
}

   //Stop idle sound on death
{  npc_death

   playsound game.sound.body 0
}