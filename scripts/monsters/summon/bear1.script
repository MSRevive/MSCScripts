//This uses a new model, so it cannot share the old bear base
#scope server
{ [shared]

	//changes required to make summon
	//- race human
	//- and these:
	const ANIM_WALK_BASE bear_walk
	const ANIM_RUN_BASE bear_run
	//==================

	//these were added for summon, but not required
	//(keeping this up here for quick reading, though it should likely be in next section)
	if ( game.serverside )
	{
		const HOVER_FAR 138
		const HOVER_CLOSE 138
		const SUMMON_CIRCLE_INDEX 13 //maybe 14
		const STAT_HP_MAX 12000 //HP at level 100
		const STAT_DMG_MAX 400 //damage at level 100
		//new base summons tuff
		const SUMMON_UNIQUE 1 //can only have one active at a time
		const SUMMON_UNIQUE_TAG bear1
		const SUM_NO_TALK 1 //alternate response system
		setvard PLR_FRUSTRATED 0 //anti-troll (blocking newbs)
	}
	//also added summon_acknowledge and some minor script alterations for scaling damage with master's skill
	//==================


	//anims used by base
	setvar ANIM_WALK bear_walk
	setvar ANIM_RUN bear_run
	setvar ANIM_IDLE bear_idle01
	setvar ANIM_FLINCH bear_flinch
	setvard ANIM_ATTACK bear_claw02
	setvard ANIM_DEATH bear_die02

	//custom anims
	const ANIM_RUN_NORM bear_run
	const ANIM_WALK_NORM bear_walk
	const ANIM_HOP bear_pounce
	const ANIM_IDLE_NORM bear_idle01
	const ANIM_IDLE_STAND bear_standingidle01
	const ANIM_CLAW_STAND bear_claw
	const ANIM_CLAW_NORM bear_claw02
	const ANIM_DEATH_STAND bear_diestanding
	const ANIM_DEATH_NORM bear_die02
	const ANIM_STANDUP bear_standup
	const ANIM_STANDDOWN bear_standdown
}

{
	//differs from original monster (adjusted for scaleable summon)
	const DMG_CLAW_NORM_ADJ 1.1
	const DMG_CLAW_STAND_ADJ 0.8


	//stats used by base
	setvard ATTACK_MOVERANGE 140	//get this close
	setvard ATTACK_RANGE 150		//hit when this close
	setvard ATTACK_HITRANGE 200		//actual range of attack
	setvar CAN_FLINCH 0				//bear only flinches while standing
	setvard FLINCH_CHANCE 25		//chance to flinch when struck for 10% health
	setvard FLINCH_HEALTH 500		//how low on health I must be before I will flinch
	setvard FLINCH_DELAY 10			//delay between flinches
	const NPC_BASE_EXP		0
	setvard NPC_MUST_SEE_TARGET 0

	//other custom
	const FREQ_HOP 5.0				//how often I can leap
	const FREQ_CHECK_STAND 1.0		//player must be in range this long x2 before I attempt to stand
	const FREQ_STAND $randf(5,10)	//this long before I stand again
	const LEAP_RANGE 256			//target must be at least this far before I will leap at him
	const LEAP_RANGE_MAX 512		//but also closer than this
	const ATTACK_HITCHANCE 90

	//added for summon
	const SOUND_SUMMON_ACKNOWLEDGE1 monsters/bear/c_bear_yes.wav
	const SOUND_SUMMON_ACKNOWLEDGE2 monsters/bear/c_bear_no.wav
	const SOUND_SUMMON_ACKNOWLEDGE3 monsters/bear/c_bear_slct.wav
	const SOUND_DISAPOINT monsters/bear/c_bear_no.wav

	//sound
	const SOUND_DEATH 		monsters/bear/giantbeardeath.wav
	const SOUND_DEATH2 		monsters/bear/giantbeardeath2.wav
	const SOUND_GETUP_GROWL	monsters/bear/giantbeardeath2.wav
	const SOUND_GETUP		monsters/troll/step1.wav
	const SOUND_GETDOWN		monsters/troll/step2.wav
	const SOUND_UPSNARL		monsters/bear/giantbearupsnarl.wav
	const SOUND_ATTACK1 	monsters/bear/cubattack.wav
	const SOUND_ATTACK2 	zombie/claw_miss2.wav
	const SOUND_ATTACK3 	none
	const SOUND_STRUCK1 	weapons/cbar_hitbod1.wav
	const SOUND_STRUCK2 	weapons/cbar_hitbod2.wav
	const SOUND_STRUCK3 	weapons/cbar_hitbod3.wav
	const SOUND_STRUCK4 	monsters/bear/cubpain.wav
	const SOUND_STRUCK5 	none
	precache SOUND_DEATH
}

#include monsters/summon/base_summon

{ [shared] npc_spawn
	name a|Bear Guardian
	race human
	setmoveanim ANIM_WALK
	setidleanim ANIM_IDLE
	playanim once ANIM_IDLE
	hp 800
	setmodel monsters/giant_rat.mdl
	setmodelbody 0 5
	roam 0
	setprop ent_me scale 1.75
	width 100
	height 80
}

{ npc_post_spawn
	setmoveanim ANIM_WALK
	setidleanim ANIM_IDLE_NORM
}

{ npcatk_hunt

	if ( NPCATK_TARGET equals unset )
	{
		if ( AM_STANDING )
		{
			if game.time > NEXT_STAND_CHECK
			setvard NEXT_STAND_CHECK game.time
			add NEXT_STAND_CHECK FREQ_CHECK_STAND
			callevent bear_getdown
		}
	}

	if NPCATK_TARGET isnot unset

	if NPCATK_TARGET isnot SUMMON_MASTER

	if ( AM_STANDING )
	{
		if $get(NPCATK_TARGET,range) > ATTACK_RANGE
		if game.time > NEXT_STAND_CHECK
		setvard NEXT_STAND_CHECK game.time
		add NEXT_STAND_CHECK FREQ_CHECK_STAND
		callevent bear_getdown
	}

	if !AM_STANDING

	if ( $get(NPCATK_TARGET,range) >= LEAP_RANGE )
	{
		if $get(NPCATK_TARGET,range) <= LEAP_RANGE_MAX
		callevent bear_leap	NPCATK_TARGET	
	}
	if !AM_LEAPING

	if game.time > NEXT_STAND_CHECK
	setvard NEXT_STAND_CHECK game.time
	add NEXT_STAND_CHECK FREQ_CHECK_STAND
	if ( $get(NPCATK_TARGET,range) <= ATTACK_RANGE )
	{
		if !AM_STANDING
		//check headroom
		local TRACE_START $get(ent_me,origin)
		local TRACE_END TRACE_START
		vectoradd TRACE_END z 256
		local TRACE_LINE $get_traceline(TRACE_START,TRACE_END,worldonly)
		dbg getup_test $dist(TRACE_START,TRACE_END)
		if $dist(TRACE_START,TRACE_LINE) > 128
		callevent bear_getup
	}
}

{ bear_getup
	dbg bear_getup
	playsound 0 10 SOUND_GETUP_GROWL
	setvar CAN_FLINCH 0
	setvard ANIM_ATTACK ANIM_CLAW_STAND
	playanim critical ANIM_STANDUP
	setvar ANIM_RUN ANIM_IDLE_STAND
	setvar ANIM_WALK ANIM_IDLE_STAND
	setvar ANIM_IDLE ANIM_IDLE_STAND
	setmoveanim ANIM_IDLE_STAND
	setidleanim ANIM_IDLE_STAND
	setvard NO_STUCK_CHECKS 1	//I cant move while standing, so turn off stuck checker
	setvard AM_STANDING 1
	callevent 1.0 resume_flinch
}

{ bear_getdown
	dbg bear_getdown
	setvar CAN_FLINCH 0
	setvard AM_STANDING 0
	setvard ANIM_ATTACK ANIM_CLAW_NORM
	playanim critical ANIM_STANDDOWN
	setvar ANIM_RUN ANIM_RUN_NORM
	setvar ANIM_WALK ANIM_WALK_NORM
	setvar ANIM_IDLE ANIM_IDLE_NORM
	setmoveanim ANIM_RUN
	setidleanim ANIM_IDLE_NORM
	setvard AM_STANDING 0
	callevent 0.5 resume_stuck
}

{ resume_stuck
	playsound 0 10 SOUND_GETDOWN
	setvard NO_STUCK_CHECKS 0
}

{ resume_flinch
	setvar CAN_FLINCH 1
}

{ bear_leap //PARAM1 = target
	if !LEAP_DELAY
	setvard LEAP_DELAY 1
	callevent FREQ_HOP reset_leap_delay

	setvard NPC_FORCED_MOVEDEST 1
	setmovedest PARAM1 ATTACK_MOVERANGE
	playsound 0 10 SOUND_UPSNARL
	playanim critical ANIM_HOP
	setvard AM_LEAPING 1
	setvard DID_STUN 0
	callevent 0.1 bear_leap2
	callevent 0.5 bear_leap_done
}

{ reset_leap_delay
	setvard LEAP_DELAY 0
}

{ bear_leap_done
	setvard AM_LEAPING 0
}

{ bear_leap2
	callevent bear_leap_scan
	addvelocity ent_me $relvel(0,500,100)
}

{ bear_leap_scan
	if AM_LEAPING
	callevent 0.1 bear_leap_scan
	if ( $get(NPCATK_TARGET,range) < ATTACK_RANGE )
	{
		if !DID_STUN
		setvard DID_STUN 1
		addvelocity ent_laststruckbyme $relvel(0,100,100)
		applyeffect NPCATK_TARGET effects/debuff_stun 5.0 $get(ent_me,id)
	}
}

{ game_struck
   playrandomsound 0 8 SOUND_STRUCK1 SOUND_STRUCK2 SOUND_STRUCK3 SOUND_STRUCK4 SOUND_STRUCK5
}

{ attack_sound
   playrandomsound 0 10 SOUND_ATTACK1 SOUND_ATTACK2 SOUND_ATTACK3
}

//anim events
{ standclaw_1
	callevent attack_sound
	if $get(NPCATK_TARGET,range) < ATTACK_HITRANGE
	local L_DMG DMG_BASE
	multiply L_DMG DMG_CLAW_NORM_ADJ
	callevent npcatk_dodamage NPCATK_TARGET direct L_DMG ATTACK_HITCHANCE $get(ent_me,id) slash
}

{ standclaw_2
	callevent attack_sound
	if $get(NPCATK_TARGET,range) < ATTACK_HITRANGE
	local L_DMG DMG_BASE
	multiply L_DMG DMG_CLAW_STAND_ADJ
	callevent npcatk_dodamage NPCATK_TARGET direct L_DMG ATTACK_HITCHANCE $get(ent_me,id) slash
}

{ crawlclaw_1
	callevent attack_sound
	if $get(NPCATK_TARGET,range) < ATTACK_HITRANGE
	local L_DMG DMG_BASE
	multiply L_DMG DMG_CLAW_NORM_ADJ
	callevent npcatk_dodamage NPCATK_TARGET direct L_DMG ATTACK_HITCHANCE $get(ent_me,id) slash
}

{ summon_summoned
	setvard OWNER_SKILL $get(SUMMON_MASTER,skill.spellcasting)
	multiply OWNER_SKILL 0.01
	dbg summon_summoned OWNER_SKILL
	setvard DMG_BASE $ratio(OWNER_SKILL,1,STAT_DMG_MAX)
	setvard HP_BASE $ratio(OWNER_SKILL,1,STAT_HP_MAX)
	setvard SUMMON_DMG_BASE DMG_BASE
	hp HP_BASE
}

{ summon_acknowledge //<follow|hunt|stay|defend|attack|report>

	if ( PARAM1 equals stay ) local AM_DISAPOINT 1
	if ( PARAM1 equals follow ) local AM_DISAPOINT 1

	if ( PARAM1 equals report )
	{
		local ME_STRENGTH $int(SUMMON_DMG_BASE)
		stradd ME_STREGTH "/strike"

		local ME_HEALTH $int(game.monster.hp)
		local ME_MAX_HEALTH $int(game.monster.maxhp)
		local HEALTH_STRING ME_HEALTH
		stradd HEALTH_STRING "/"
		stradd HEALTH_STRING ME_MAX_HEALTH

		saytextrange 1024
		saytext Health: HEALTH_STRING Attack: ME_STRENGTH
	}

	if ( AM_DISAPOINT )
	{
		playsound 0 10 SOUND_DISAPOINT
	}
	else
	{
		playrandomsound 0 10 SOUND_SUMMON_ACKNOWLEDGE1 SOUND_SUMMON_ACKNOWLEDGE2 SOUND_SUMMON_ACKNOWLEDGE3
	}
}

//Some anti-troll stuff, as this guy can block hallways, and is not so easily slain
{ game_damaged
	if NPCATK_TARGET equals unset
	if $get(PARAM1,isplayer)
	if $get(PARAM1,range) < 128
	setmovedest $get(PARAM1,id) 256 flee
	callevent 0.1 run_anim
	playrandomsound 0 10 SOUND_SUMMON_ACKNOWLEDGE1 SOUND_SUMMON_ACKNOWLEDGE2 SOUND_SUMMON_ACKNOWLEDGE3	

	if PARAM1 isnot SUMMON_MASTER

	if ( LAST_TIME_PLR_STRUCK equals 'LAST_TIME_PLR_STRUCK' )
	{
		setvard LAST_TIME_PLR_STRUCK game.time
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	local FIVE_SECS_AGO game.time
	subtract FIVE_SECS_AGO 10.0

	dbg anti-troll FIVE_SECS_AGO vs. LAST_TIME_PLR_STRUCK

	if ( LAST_TIME_PLR_STRUCK < FIVE_SECS_AGO )
	{
		setvard PLR_FRUSTRATED 0
		dbg anti-troll reset frustration
	}
	if LAST_TIME_PLR_STRUCK > FIVE_SECS_AGO
	setvard LAST_TIME_PLR_STRUCK game.time
	add PLR_FRUSTRATED 1

	dbg anti-troll PLR_FRUSTRATED

	if PLR_FRUSTRATED > 4
	gplayermessage PARAM1 You dismiss $get(ent_me,name.full)
	callevent killme
}

{ run_anim
	playanim once ANIM_RUN_BASE
}

//summons vanish on death, so this isn't playing
{ game_death
	if ( AM_STANDING )
	{
		setvard ANIM_DEATH bear_diestanding
	}
	else
	{
		setvard ANIM_DEATH bear_die01
	}
	playanim critical ANIM_DEATH
}