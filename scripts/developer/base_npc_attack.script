//Standard monster which by default will attack when attacked
//(Set hearingsensitivity > 0 to face enemy when he's heard)
//
//Definitions required:
//
//MOVE_RANGE
//ANIM_WALK
//ANIM_RUN
//ANIM_ATTACK
//CAN_HUNT
//	HUNT_AGRO 		Preemptive attack
//	NPC_MOVE_TARGET 	Who to agro [default: 'enemy']
//				If HUNT_AGRO == 0, this is set to the last person that struck me
//CAN_ATTACK
//	ATTACK_RANGE
//CAN_FLEE
//	FLEE_HEALTH
//	FLEE_CHANCE
//	FLEE_DISTANCE
//CAN_HEAR
//CAN_RETALIATE
//	RETALIATE_CHANGETARGET_CHANCE
//CAN_FLINCH
//	FLINCH_ANIM
//	FLINCH_CHANCE
//	FLINCH_DELAY


#scope server
#include monsters/base_npc
#include monsters/base_anti_stuck

{
   //Defaults
	setvard PLAYER_HALFHEIGHT 36 //has to be a vard so top scripts can use
   setvard IS_FLEEING 0
   setvard IS_HUNTING 0

	if ( ANIM_IDLE equals 'ANIM_IDLE' ) setvar ANIM_IDLE idle //too many scripts with this issue

   if( CAN_HUNT equals 'CAN_HUNT' ) setvard CAN_HUNT 1 
   if( HUNT_AGRO )
   {
      if( NPC_MOVE_TARGET equals 'NPC_MOVE_TARGET' ) setvard NPC_MOVE_TARGET enemy
   }
   else if( NPC_MOVE_TARGET equals 'enemy'  ) setvard HUNT_AGRO 1 //Backwards compatibility

	setvard CHASE_RANGE 5000		//NEW AI 8:02 AM 6/15/2006 - max ddistance before new AI gives up chase
	setvar MAX_SEARCH_TIME 3	//NEW AI - max times AI will cycle through all search options before retreating and starting again
	setvar MAX_AI_RETRYS 1		//NEW AI - max cycles AI will allow before giving up completely
	setvar CYCLE_TIME_IDLE 1.2	//NEW AI - how often to cycle before spotting player (lag reduction)
	setvar CYCLE_TIME_ACTIVE 0.1 //NEW AI - how often to cycle after spotting player (lag reduction)

	setvard HUNT_LASTTARGET ¯NONE¯ //targeted enemy will be stored here

   if( CAN_ATTACK equals 'CAN_ATTACK' ) setvard CAN_ATTACK 1
   if( CAN_HEAR equals 'CAN_HEAR' ) setvard CAN_HEAR 1
   if( CAN_FLEE equals 'CAN_FLEE' ) setvard CAN_FLEE 1
   if( CAN_FLINCH equals 'CAN_FLINCH' ) setvard CAN_FLINCH 0
   if( CAN_RETALIATE equals 'CAN_RETALIATE' ) setvard CAN_RETALIATE 1
   if( RETALIATE_CHANGETARGET_CHANCE equals 'RETALIATE_CHANGETARGET_CHANCE' ) setvard RETALIATE_CHANGETARGET_CHANCE 75
   if( NPC_HEAR_TARGET equals 'NPC_HEAR_TARGET' ) setvard NPC_HEAR_TARGET enemy
   if( FLEE_DISTANCE equals 'FLEE_DISTANCE' ) setvard FLEE_DISTANCE 500
	
	if ( ATTACK_HITRANGE equals 'ATTACK_HITRANGE' )
	{
		setvard ATTACK_HITRANGE ATTACK_RANGE
		multiply ATTACK_HITRANGE 1.5
	}

	//min damage 4% of max to make a creature flinch now
	if( FLINCH_DMG_REQ equals 'FLINCH_DMG_REQ' )
	{
		setvard FLINCH_DMG_REQ $get(ent_me,maxhp)
		multiply FLINCH_DMG_REQ 0.04
	}
}

{
   eventname game_spawn

	setvard NPCATK_JUST_SPAWNED 1

   setvard HOME_LOC $get(ent_me,origin)

   if( MY_ENEMY isnot 'MY_ENEMY' ) setvard NPC_MOVE_TARGET MY_ENEMY	//Backwards compatibility

   setvard CYCLE_TIME CYCLE_TIME_IDLE

	//staggering these to help cut down on spawn lag
	callevent $randf(0.1,0.3) npcatk_get_postspawn_properties
	callevent $randf(0.6,0.9) hunting_mode_go
}

{ npcatk_get_postspawn_properties

	//attack range must be at least the monster's height plus half the players
	setvard MIN_ATTACK_RANGE PLAYER_HALFHEIGHT
	setvard MONSTER_HEIGHT game.monster.height
	add MIN_ATTACK_RANGE MONSTER_HEIGHT
	add MIN_ATTACK_RANGE 10

	if ( ATTACK_HITRANGE <= MIN_ATTACK_RANGE )
	{
		setvard ATTACK_HITRANGE MIN_ATTACK_RANGE
		multiply ATTACK_HITRANGE 1.5
	}

	////dbg MinAtkRange MIN_ATTACK_RANGE
}

   //Hunting
{ hunting_mode_go	//adding a name to this event so it can be overriden

   repeatdelay CYCLE_TIME		//remember if override or extension is used you must include repeatdelay

	if !PLAYING_DEAD

   if ( IS_FLEEING ) callevent fleeing_check_atk

   if !IS_FLEEING
   
   if CAN_HUNT

   if( $cansee(NPC_MOVE_TARGET) )
   { 
		local SEE_TARGET 1
		//only kicks in if player is at distance, as new AI better at navigating around allies than old
		if ( MOVING_LAST_LOC == 1 )
		{
			 if ( $get(ent_lastseen,range) > 600 ) callevent stop_advanced_search "reacquired_distant_target"
		}
		
		setvard HUNT_LASTTARGET $get(ent_lastseen,id)
		//this sub didn't exit here, but is used by several scripts 
		//it's called every hunt_mode frame the enemy is seen
		callevent npcatk_targetvalidate HUNT_LASTTARGET
		
		if HUNT_LASTTARGET isnot ¯NONE¯
		
		if( $get(HUNT_LASTTARGET,dist) > MOVE_RANGE )
		{
			//Move towards target
			//[newAI] store position in case goes out of sight
			setvard LAST_SEEN_TARG $get(ent_lastseen,id)
			setvard LAST_KNOWN_POS $get(ent_lastseen,origin)
			//[/newAI]
			setvard IS_HUNTING 1
			setmoveanim ANIM_RUN
			setmovedest HUNT_LASTTARGET MOVE_RANGE
		}
		
		callevent cycle_up
		
		callevent npc_targetsighted
   }

	if( HUNT_LASTTARGET isnot ¯NONE¯ ) 
	{
		callevent check_attack
		callevent npcatk_check_for_target_death
	}


	if !NO_ADVANCED_SEARCHES

   	//===============================================================
   	//ALL NEW AI - REMAINDER OF SUB by Thothie ======================
   	//Added 2:56 AM 6/15/2006
   	//Trying to make monsters find targets that hide behind things
   	if LAST_SEEN_TARG isnot 'LAST_SEEN_TARG'
   	if !SEE_TARGET   
   	if !IS_FLEEING
   	if !I_R_PET	//pets don't do advanced searches

	if ( MOVING_LAST_LOC equals 'MOVING_LAST_LOC' ) 
	{
		//start moving to last known loc, if haven't already
		setvard MOVING_LAST_LOC 1
		callevent moveto_last_known
		local EXIT_SUB 1
	}

	//make sure last seen target not dead
	if ( LAST_SEEN_TARG isnot 'LAST_SEEN_TARG' )	//check maybe redundant
	{
	    local LCL_TARGET_ALIVE 1
	    local TARG_EXIST $get(LAST_SEEN_TARG,exists)
		if( TARG_EXIST ) 
		{
			if( !$get(LAST_SEEN_TARG,alive) ) setvard LCL_TARGET_ALIVE 0
		} 

		if( !TARG_EXIST ) setvard LCL_TARGET_ALIVE 0

		if( !LCL_TARGET_ALIVE )
	   	{	//Target died or was removed
			//dbg Hunt-My Target Died
	 		setvard HUNT_LASTTARGET ¯NONE¯
			setvard AS_TARGET_DIED 1
			setvard LAST_SEEN_TARG 'LAST_SEEN_TARG'
			if ( !NO_ADVANCED_SEARCHES ) callevent my_target_died "move_loc_hunt"
			local EXIT_SUB 1
   		}
	}

	if !EXIT_SUB

	if !$cansee(LAST_SEEN_TARG)	//semi-redundant
	
	//Keep moving to last known loc
	//this sub maxes out MOVE_LASTKNOWN_CNT if
    //1 - Monster is blocked en routue to last known location
    //2 - Monster reaches last known location
	//3 - Monster does not reach last known location after a certain time as determined by distance needed to travel (this bit has been removed)
	//...when one of these conditions are met, monster enters advanced search mode (if available)
	//note: The previous sequences in this sub will stop the monster if he spots another enemy en routue.

	if ( MOVE_LASTKNOWN_CNT < MAX_CHASE_TIME ) callevent moveto_last_known
	if ( STARTED_ADVANCED ) callevent advanced_search_mode AS_REASON
}

{ npcatk_check_for_target_death

	//Check if target is dead
	local LCL_TARGET_ALIVE 1
	//local TARG_EXIST $get(HUNT_LASTTARGET,exists)
	//if( TARG_EXIST ) 
	//{
		//if( !$get(HUNT_LASTTARGET,alive) ) setvard LCL_TARGET_ALIVE 0
	//} 
	//if( !TARG_EXIST ) setvard LCL_TARGET_ALIVE 0

	//seems you only really need to check if alive, so to save CPU cycles:

	setvard LCL_TARGET_ALIVE $get(HUNT_LASTTARGET,alive)

   	if( !LCL_TARGET_ALIVE )
	{	//Target died or was removed
 		setvard HUNT_LASTTARGET ¯NONE¯
		setvard AS_TARGET_DIED 1
		if ( !NO_ADVANCED_SEARCHES ) callevent my_target_died "standard_hunt"
		if ( NO_ADVANCED_SEARCHES == 1 ) callevent game_wander
	}
}

{  game_wander

	if !PURE_FLEE
	////dbg wander mode
   	setvard IS_HUNTING 0
   	setmoveanim ANIM_WALK
   	//if( IS_FLEEING ) callevent npcatk_stopflee
	callevent npc_wander
}

{  game_reached_dest

	if ( CHICKEN_RUN )
	{
		setmovedest $relpos(0,50,0) 0
	}

	if !CHICKEN_RUN

	if IS_HUNTING
	//attempt to defeat 'hesitation'
	////dbg Reached Dest.
	if !$cansee(NPC_MOVE_TARGET)
	callevent 2.0 basenpcatk_target_lost
}

{  basenpcatk_target_lost
	//dbg targ lost
	setvard IS_HUNTING 0
	callevent npcatk_target_lost
}


   //Attack
{ check_attack

   if CAN_ATTACK
   if !IS_FLEEING

   local L_ATTACK 0
	local ADJ_ATTACK_RANGE ATTACK_RANGE
	if ( ADJ_ATTACK_RANGE < MIN_ATTACK_RANGE ) local ADJ_ATTACK_RANGE MIN_ATTACK_RANGE

 	if ( $get(HUNT_LASTTARGET,range) <= ADJ_ATTACK_RANGE ) local L_ATTACK 1
	if ( ATTACK_RANGE > 512 )
	{
		//stops archers from shooting at stuff they canna see
		if ( !$cansee(HUNT_LASTTARGET) ) local L_ATTACK 0
	}

   if L_ATTACK
   callevent npcatk_attackenemy
}

{  npcatk_attackenemy

   if !IS_FLEEING

   callevent npc_selectattack		//Give a chance to select attack anim

   setmovedest HUNT_LASTTARGET 9999
   playanim once ANIM_ATTACK

    callevent npc_attack
}

   //Hit by someone
{ game_struck

	//setvard LAST_STRUCK_FOR PARAM1  //handled by base_monster_shared

	if ( HUNT_LASTTARGET equals ¯NONE¯ )
	{  
		if ( $get(ent_laststruck,isplayer) ) callevent cycle_up
		if ( $get(ent_laststruck,relationship,ent_me) isnot ally ) callevent npcatk_target ent_laststruck
	}

	if ( HUNT_LASTTARGET isnot ¯NONE¯ )
	{
		if ( $get(HUNT_LASTTARGET,range) > ATTACK_HITRANGE ) callevent npcatk_target ent_laststruck
	}

	if ( $get(ent_laststruck,isplayer) )
	{
		if ( $cansee(ally) ) callexternal ent_lastseen npcatk_ally_alert PARAM1
	}

	callevent npcatk_retaliate PARAM1
	callevent npcatk_checkflee PARAM1
	callevent npcatk_checkflinch PARAM1
	callevent npc_struck PARAM1
}

{
   //Face my new enemy, if i didn't decide to flee
   eventname npcatk_retaliate

   if CAN_RETALIATE
   local LCL_SHOULD_RETALIATE 0

	
   if( !HUNT_AGRO )
   {
   	if( !$get(NPC_MOVE_TARGET,exists) )	//Always retaliate when current target is invalid
	{
 		setvard NPC_MOVE_TARGET $get(ent_laststruck,id)
		setvard LCL_SHOULD_RETALIATE 1
	}
   }
   
   if( $rand(1,100) < RETALIATE_CHANGETARGET_CHANCE )
	setvard LCL_SHOULD_RETALIATE 1
    	
   if LCL_SHOULD_RETALIATE
   if( !HUNT_AGRO ) setvard NPC_MOVE_TARGET $get(ent_laststruck,id)	//When not agro, switch targets
   callevent npcatk_faceattacker $get(ent_laststruck,id)
}

   //Face my new enemy and stop moving
   //=================================
{  npcatk_faceattacker 			//PARAM1: Entity to face

   	if !IS_FLEEING
	if !CANT_TURN

   	setmovedest $get(PARAM1,id) 9999
   	look 1024	//Thothie - I can't find documentation on this command

}


   //Chance of fleeing at low health
   //===============================
{  npcatk_checkflee

	if !IS_FLEEING

   	if CAN_FLEE equals 1
   	if game.monster.hp <= FLEE_HEALTH
   	if $rand(0,100) < FLEE_CHANCE

	setvard FLEE_STUCK_COUNTER 0

	callevent npcatk_flee ent_laststruck FLEE_DISTANCE  3
}
{  npcatk_stopflee //param1 = reason (remains param1 it fime expired)

	if IS_FLEEING

	if ( PARAM1 equals stuck_too_long )
	{
		if $cansee(enemy)
		if $get(ent_lastseen,range) < ATTACK_RANGE
		setvard RE_FLEE_DELAY 1
		callevent 10.0 reset_re_flee
		//was stuck during last flee in range of opponent
		//probably sticking me in place on purpous, so ignoring flee requests for 10 seconds
	}

	setvard PURE_FLEE 0
	setvard IS_FLEEING 0
	setmoveanim ANIM_WALK
	if( NPCATK_FLEE_RESTORETARGET ) callevent npcatk_faceattacker HUNT_LASTTARGET
	callevent npc_stopflee
}

{ reset_re_flee

	setvard RE_FLEE_DELAY 0

}

{ npcatk_flee		//PARAM1: Threatning Entity  2: Dist to flee  3: Time to stop fleeing (optional)

	////dbg got $get(PARAM1,name) PARAM2 PARAM3

	if !PLAYING_DEAD
	if !CANT_FLEE

	if !IS_FLEEING
	if !RE_FLEE_DELAY

	playanim break
	setmovedest PARAM1 PARAM2 flee
	setmoveanim ANIM_RUN

	setvard LAST_FLEE_POS $get(ent_me,origin)
	setvard FLEE_THREAT_ENT PARAM1
	setvard FLEE_SET_DIST PARAM2

	setvard FLEE_STUCK_COUNTER 0

	if ( PURE_FLEE ) setvard FLEE_STUCK_THRESH 15
	if ( !PURE_FLEE ) setvard FLEE_STUCK_THRESH 30	//give time to do counter atks

	callevent 0.2 npcatk_flee_stuckcheck

	setvard IS_FLEEING 1
	setvard NPCATK_FLEE_RESTORETARGET IS_HUNTING
   	if( PARAM3 isnot 'PARAM3' ) callevent PARAM3 npcatk_stopflee time_expired
}

{ npcatk_flee_stuckcheck

	if IS_FLEEING

	local FLEE_MY_POS $get(ent_me,origin)
	local FLEE_MOVE_RANGE $dist(FLEE_MY_POS,LAST_FLEE_POS)

	if ( FLEE_MOVE_RANGE == 0 )
	{
		setmovedest FLEE_THREAT_ENT FLEE_SET_DIST flee
		add FLEE_STUCK_COUNTER 1
	}
	setvard LAST_FLEE_POS $get(ent_me,origin)

	if ( FLEE_MOVE_RANGE > 0 ) setvard FLEE_STUCK_COUNTER 0

	if ( FLEE_STUCK_COUNTER >= FLEE_STUCK_THRESH ) callevent npcatk_stopflee stuck_too_long

	callevent 0.1 npcatk_flee_stuckcheck
}

 //Hear enemies
  //============
{  game_heardsound	//PARAM1: Sound type   2: Sound Origin   3: Danger radius

   	if CAN_HEAR
   	if !IS_FLEEING
	
   	if( PARAM1 equals 'danger' )
	{
		if $get(ent_lastheard,dist) < PARAM3
		if ( $get(ent_lastheard,relationship,ent_me) equals 'ally' ) 
		{
			//dbg DANGER-Ally trying to unstuck near me, going non-solid
			setsolid none
			setbbox none
			if ( NO_STUCK_CHECKS ) callevent 1.0 npcatk_soldify
			setvard STUCK_COUNT NOCLIP_THRESHOLD
		}
		setvard I_WILL_FLEE 1
		callevent npcatk_check_if_scared_of $get(ent_lastheard,id)
		if I_WILL_FLEE
		callevent npcatk_flee $get(ent_lastheard,id) PARAM3 3
	}

   	if( PARAM1 isnot 'danger' )
	{
		if !IS_HUNTING
		if !MOVING_LAST_LOC
		////dbg Heard Somethin!
		if $get(ent_lastheard,relationship,ent_me) equals enemy
		////dbg Heard ENEMy!
		if ( $get(ent_me,race) equals hguard )
		{
			//Players who have killed human guards detect as enemies
			//this removes that effects
			if ( $get(ent_lastheard,isplayer) ) local EXIT_SUB 1
		}
		if !EXIT_SUB
		setmovedest $get(ent_lastheard,id) ATTACK_RANGE
 		setvard HUNT_LASTTARGET $get(ent_lastheard,id)
   		//callevent npcatk_faceattacker ent_lastheard
	}

	callevent npc_heardenemy	
}

{ npcatk_soldify

	setsolid box
	setbbox npcsize
}

  //Flinch when hit
{
   eventname npcatk_checkflinch	//param1 = damage taken

   if CAN_FLINCH

	if PARAM1 >= FLINCH_DMG_REQ

   if !NPC_DELAYING_FLINCH
   if $rand(0,99) < FLINCH_CHANCE

	if ( FLINCH_ANIM isnot 'FLINCH_ANIM' ) playanim critical FLINCH_ANIM

   setvard NPC_DELAYING_FLINCH 1
   callevent FLINCH_DELAY npcatk_resetflinch
   callevent npc_flinch
}
{
   eventname npcatk_resetflinch
   setvard NPC_DELAYING_FLINCH 0
}

{ game_hearsound

	if !IS_HUNTING
	if !IS_FLEEING
	if( PARAM1 equals 'combat' )
	{
		if HUNT_AGRO
		setmovedest ent_lastheard 9999
	}
}

{ my_target_died

		if ( NPCATK_JUST_SPAWNED == 1 )
		{
			local EXIT_SUB 1
			setvard NPCATK_JUST_SPAWNED 0
		}
		if !EXIT_SUB

 		setvard HUNT_LASTTARGET ¯NONE¯
		setvard LAST_SEEN_TARG 'LAST_SEEN_TARG'
		if ( !$cansee(player) )	setvard CYCLE_TIME CYCLE_TIME_IDLE
		////dbg TargDied while PARAM1 - Cycle Time Set to CYCLE_TIME
		if ( MOVING_LAST_LOC == 1 ) 
		{
			callevent give_up_advanced "target_died"
			//setvard MOVING_LAST_LOC 'MOVING_LAST_LOC'
			///if ( ADVANCED_SEARCHING ) subract ADVANCED_SEARCHERS 1
		}
 		callevent game_wander
}

{ give_up_advanced //PARAM1 = reason

		//Lost target, clear hunting list
		//dbg Giving up AS PARAM1
		if ( ADVANCED_SEARCHING ) subtract ADVANCED_SEARCHERS 1
		setvard ADVANCED_SEARCHING 'ADVANCED_SEARCHING'
		setvard STARTED_ADVANCED 0
		setvard MOVING_LAST_LOC 'MOVING_LAST_LOC'
		setvard LAST_SEEN_TARG 'LAST_SEEN_TARG'
		setvard MOVE_LASTKNOWN_CNT 'MOVE_LASTKNOWN_CNT'
		setmoveanim ANIM_WALK
		////dbg playing idle
		playanim once ANIM_IDLE
		callevent 1 game_wander
		setvard HUNT_LASTTARGET ¯NONE¯
}

{ stop_advanced_search //PARAM1 = calling sub

	//dbg FoundTarget- stopping adv. search ( CalledFrom: PARAM1 )
	playanim break
	callevent check_attack
	setvard LAST_SEEN_TARG $get(ent_lastseen,id)
	setvard LAST_KNOWN_POS $get(ent_lastseen,origin)
	setvard TWEAK_SEARCH_ANGLE 0
	if ( ADVANCED_SEARCHING ) subract ADVANCED_SEARCHERS 1
	setvard ADVANCED_SEARCHING 'ADVANCED_SEARCHING'
	setvard STARTED_ADVANCED 0
	setvard MOVE_LASTKNOWN_CNT 'MOVE_LASTKNOWN_CNT'
	setvard MOVING_LAST_LOC 'MOVING_LAST_LOC'
	setmovedest ent_lastseen MOVE_RANGE
}

{ moveto_last_known

   local MY_LOC $get(ent_me,origin)

   //initiate
   if ( MOVE_LASTKNOWN_CNT equals 'MOVE_LASTKNOWN_CNT' ) 
   {
		local DIST_TO_DEST $dist(MY_LOC,LAST_KNOWN_POS)
		//adjust chase time by distance needed to travel
		setvard MAX_CHASE_TIME DIST_TO_DEST
		divide MAX_CHASE_TIME 5
		setvard MAX_CHASE_TIME $int(MAX_CHASE_TIME)
	
		//figure close range, where I will slow down for fine adjustment
		local ACT_MOVE_RANGE MOVE_RANGE
		if ( MOVE_RANGE equals 'MOVE_RANGE' ) local ACT_MOVE_RANGE 64
		if ( MOVE_RANGE > 120 ) local ACT_MOVE_RANGE 64
		setvard VERY_CLOSE_RANGE ACT_MOVE_RANGE
	    setvard CLOSE_RANGE ACT_MOVE_RANGE
		multiply CLOSE_RANGE 1.5
		multiply VERY_CLOSE_RANGE 0.75

		////dbg lost sight of target - moving to last seen pos ( MAX_CHASE_TIME )
	
		//reset vars
		setvard MOVE_LASTKNOWN_CNT 0
		setvard SWITCHED_TO_WALK 'SWITCHED_TO_WALK'
		setvard SEARCH_MODE_TIME 0
		setvard AI_RETRYS 0
		setvard MOVE_LASTKNOWN_CNT 0
		//setvard HUNT_LASTTARGET LAST_KNOWN_POS //stop AI from resuming hunt based on current loc
		setvard MOVELAST_STUCK_CNT 0

		setvard LASTKNOWN_DEBUG MAX_CHASE_TIME 	//remove this debug
		subtract LASTKNOWN_DEBUG 1		//remove this debug
   }

   //move to target last known position for a time
   if ( MOVE_LASTKNOWN_CNT < MAX_CHASE_TIME )
   {
		local BN_TRAVEL_DISTANCE $dist(MY_LOC,BN_MY_LAST_LOC)
		if ( BN_TRAVEL_DISTANCE < 0.5 ) 
		{
			add MOVELAST_STUCK_CNT 1
			////dbg Stuck? Dist $dist(MY_LOC,BN_MY_LAST_LOC)
		}

		if ( MOVELAST_STUCK_CNT > 1 )
		{ 
			////dbg Switching to Search - Cant reach LastKnownPos, or stuck ( Dist $dist(MY_LOC,BN_MY_LAST_LOC) MyLoc MY_LOC )
			setvard AS_REASON "Got_Stuck_En_Routue
			setvard MOVE_LASTKNOWN_CNT MAX_CHASE_TIME
			setvard STARTED_ADVANCED 1
		}

		setvard BN_MY_LAST_LOC MY_LOC	//store this location, so I can see if I moved or am stuck later

		local DIST_TO_DEST $dist(MY_LOC,LAST_KNOWN_POS)
		////dbg ClosingLastKnown DIST_TO_DEST 

		if ( DIST_TO_DEST > CLOSE_RANGE ) 
		{
			//run until I get to close range of last seen position
			setmoveanim ANIM_RUN
			playanim once ANIM_RUN
		}
	
		if ( DIST_TO_DEST <= CLOSE_RANGE ) 
		{
			if ( SWITCHED_TO_WALK equals 'SWITCHED_TO_WALK' )
			{
				////dbg Near LastKnown, switching to walk
				playanim break
				playanim critical ANIM_WALK
				setmoveanim ANIM_WALK
				setvard SWITCHED_TO_WALK 1
	
				vectoradd LAST_KNOWN_POS $relvel(0,CLOSE_RANGE,0)	//move a little past last seen position on arrival
			}
		}

		setmovedest LAST_KNOWN_POS 1


		//consider offing this bit, since monster will stop when it reaches or is stuck
		if ( DIST_TO_DEST == 0.0 ) 
		{ 
			//dbg Reached Last Known Pos ( Dist DIST_TO_DEST LessThan VERY_CLOSE_RANGE )
			setmoveanim ANIM_IDLE
			////dbg playing idle
			playanim once ANIM_IDLE
			look 2048
			setvard AS_REASON "Reached_Last_Known"
			setvard STARTED_ADVANCED 1
			setvard MOVE_LASTKNOWN_CNT MAX_CHASE_TIME	//causes to stop trying to reach pos
		}

		//add MOVE_LASTKNOWN_CNT 1 //no longer letting travel time expire

		if ( MOVE_LASTKNOWN_CNT == MAX_CHASE_TIME ) 
		{
			setvard AS_REASON "Travel_Time_Expired"
			setvard STARTED_ADVANCED 1
		}
   } //endif MOVE_LASTKNOWN_CNT < MAX_CHASE_TIME

   	if ( $cansee(enemy) )	//this may need to be changed to NPC_MOVE_TARGET - but needs debugging
	{
		//dbg Found Target- stopping advanced search
		playanim break
		setmovedest ent_lastseen MOVE_RANGE
		setvard HUNT_LASTTARGET $get(ent_lastseen,id)
		callevent check_attack
		callevent stop_advanced_search "Spotted_Targ_During_Adv_Search"
	}

} //end move_last_known

{ advanced_search_mode

   //Advanced Search Mode ============================================================
   //Alright, I'm as close to the point where i last saw him as I'm gonna get
   //Start trying to reach his current location by going towards areas in front and behind it, trying to spot him
   //(This code section needs improvement)
	//(See about simplifying into an ever widening circle)

   local MY_LOC game.monster.origin

	//init
	if ( ADVANCED_SEARCHING equals 'ADVANCED_SEARCHING' )
	{
		add ADVANCED_SEARCHERS 1
		//dbg Activated Search Mode - Reason AS_REASON TotalAS ( ADVANCED_SEARCHERS ) 
		setvard ADVANCED_SEARCHING 1
		setvard SEARCHED_THIS_ANGLE 1				//time spent searching this angle
		setvard SEARCH_THIS_ANGLE_MAX $rand(10,50)	//max time to spend searching this angle
		setvard AS_REASON 'AS_REASON'
    	if ( ADVANCED_SEARCHERS > ADVANCED_SEARCHERS_MAX ) callevent give_up_advanced "Too_Many_Advanced_Searchers"
	}

	//setvard HUNT_LASTTARGET LAST_SEEN_TARG //switch AI back to last target
	local NME_LOC $get(LAST_SEEN_TARG,origin)
	local NME_DISTANCE $dist(MY_LOC,NME_LOC)
	local ACT_DEST NME_LOC

	//if not traveled, assume stuck, adjust angle imediately
	local TRAVELED_DISTANCE $dist(BN_MY_LAST_LOC,MY_LOC)

	if ( TRAVELED_DISTANCE < 0.5 ) 
	{
		////dbg AdvancedS - CANNOT MOVE, adjusting angles
		setvard SEARCHED_THIS_ANGLE SEARCH_THIS_ANGLE_MAX
	}
	setvard BN_MY_LAST_LOC MY_LOC

	//Tweak Search Angle method needs... Tweaking (Kinda gets 'killer bee dance' effect, sometimes)
   	//Current method is supposed to run up and down the axis of the target by an offset of up to 512 units
    //but it seems to not be quite working that way
	
	add SEARCHED_THIS_ANGLE 1
	if ( SEARCHED_THIS_ANGLE >= SEARCH_THIS_ANGLE_MAX )
	{
		add TWEAK_SEARCH_ANGLE 32
		////dbg AdvancedS - Adjusting angles
		////dbg ASTweakedAngle ( TWEAK_SEARCH_ANGLE ) Cycles ( SEARCH_MODE_TIME ) TotalAs ( ADVANCED_SEARCHERS )
		if ( TWEAK_SEARCH_ANGLE > 1024 )
		{
			////dbg AdvancedS - Flipping Angles
			setvard TWEAK_SEARCH_ANGLE 0
			add SEARCH_MODE_TIME 1				//each 1024 tweak = 1 cycle
		}
		setvard SEARCH_THIS_ANGLE_MAX $rand(10,50)
		setvard SEARCHED_THIS_ANGLE 0
	}

	vectoradd ACT_DEST $relvel(0,TWEAK_SEARCH_ANGLE,0)

	if ( SEARCH_MODE_TIME > MAX_SEARCH_TIME )
	{
		//dbg Grrr, moving away for another try
		setvard HUNT_LASTTARGET LAST_SEEN_TARG
		callevent npcatk_flee LAST_SEEN_TARG 5000 15
		local HALF_TIME MAX_SEARCH_TIME //frustrates easier after first time
		divide HALF_TIME 2
		setvar SEARCH_MODE_TIME HALF_TIME
		add AI_RETRYS 1
		if ( AI_RETRYS > MAX_AI_RETRYS )
		{
			callevent give_up_advanced "Too_Many_Retrys"
			local GAVE_UP 1
		}
	}

		if ( NME_DISTANCE > CHASE_RANGE )	
	{
		//surrender to apathy, he's gone
		callevent give_up_advanced "Too_Far_Away"
		local GAVE_UP 1
	}

	if !GAVE_UP

	if ( $cansee(enemy) )	//this may need to be changed to NPC_MOVE_TARGET - but needs debugging
	{
		//dbg Found Target- stopping advanced search
		playanim break
		setmovedest ent_lastseen MOVE_RANGE
		setvard HUNT_LASTTARGET $get(ent_lastseen,id)
		callevent check_attack
		local EXIT_SUB 1
		callevent stop_advanced_search "Spotted_Targ_During_Adv_Search"
	}

	if !EXIT_SUB

	setmovedest ACT_DEST MOVE_RANGE
	setmoveanim ANIM_RUN

} //end advanced_search_mode

{ cycle_up

	if CYCLE_TIME == CYCLE_TIME_IDLE

	//only reduce cycle delay for player targets
	if ( $get(ent_lastseen,isplayer) )
	{
		setvard CYCLE_TIME CYCLE_TIME_ACTIVE
		setmovedest ent_lastseen 9999
        callevent check_attack
	}

	if ( !$get(ent_lastseen,isplayer) )
	{ 
		//no advanced searching for non-players
		////dbg Target Not Player - not searching
		setvard LAST_SEEN_TARG 'LAST_SEEN_TARG' 
	}
}

{ fleeing_check_atk	//anti-volcano abuse

	//attack target if in range - but only on every other second

	if !PURE_FLEE
	if !NO_ATK_DURING_FLEE

   	if CAN_ATTACK

   	if !FLEE_ATK_HESITATION

   	local L_ATTACK 0
   	if( NPC_ATTACK_TARGET isnot 'NPC_ATTACK_TARGET' )
   	{
		if( $cansee(NPC_ATTACK_TARGET,ATTACK_RANGE) ) setvard L_ATTACK 1
   	}
   	else if( $cansee(NPC_MOVE_TARGET,ATTACK_RANGE) ) setvard L_ATTACK 1

   	if L_ATTACK

	setvard FLEE_ATK_HESITATION 1
	callevent 2.0 reset_flee_hesitation

   callevent npc_selectattack		//Give a chance to select attack anim

   setangle face ent_lastseen
   playanim once ANIM_ATTACK

	//not stuck during flee, attacking
	setvard FLEE_STUCK_COUNTER 0
}

{ reset_flee_hesitation

	setvard FLEE_ATK_HESITATION 0
}

{ chicken_run //PARAM1 = duration PARAM2 = debug

	//Effort to get around buggy hesitations in npcatk_flee
	//run in a random direction for xx seconds (pick another dir if can't move)

	if !PLAYING_DEAD
	if !CANT_FLEE

	//dbg Chikcen run PARAM1 cuz PARAM2

	if !IS_FLEEING
	setvard IS_FLEEING 1
	setvard CHICKEN_RUN 1
	setvard PURE_FLEE 1
	setvard NPCATK_FLEE_RESTORETARGET IS_HUNTING

	setmoveanim ANIM_RUN
	setactionanim ANIM_RUN
	setidleanim ANIM_RUN

	setvard FLEE_DIR $rand(1,359)

	setvard CKN_TIME_END PARAM1

	setvard CKN_STUCK_COUNTER 0

	setmovedest none
	callevent 0.1 init_chicken_run
}

{ init_chicken_run

	//setangle view.yaw FLEE_DIR

	setmovedest $relpos($vec(0,FLEE_DIR,0),$vec(0,500,0)) 0

	setvard CKN_MY_OLD_POS $get(ent_me,origin)

	callevent 0.5 chicken_run_stuckcheck

	////dbg ChickenInit run ends in CKN_TIME_END

	callevent CKN_TIME_END chicken_run_end "time_up"
}

{ chicken_run_stuckcheck

	if CHICKEN_RUN

	local CKN_MY_POS $get(ent_me,origin)
	local CKN_MOVE_DIST $dist(CKN_MY_POS,CKN_MY_OLD_POS)

	////dbg dist CKN_MOVE_DIST Cmp CKN_MY_POS vs CKN_MY_OLD_POS

	if ( CKN_MOVE_DIST == 0 )
	{
		setmoveanim ANIM_RUN
		setactionanim ANIM_RUN
		setidleanim ANIM_RUN
		////dbg Chicken - stuck, picking new dir CKN_MOVE_DIST oldpos CKN_MY_OLD_POS vs CKN_MY_POS
		setvard FLEE_DIR $rand(1,359)
		setmovedest none
		//setangle view.yaw FLEE_DIR
		setmovedest $relpos($vec(0,FLEE_DIR,0),$vec(0,500,0)) 0
		playanim loop ANIM_RUN
		add CKN_STUCK_COUNTER 1
	}
	setvard CKN_MY_OLD_POS CKN_MY_POS

	if ( CKN_MOVE_DIST > 0 ) setvard CKN_STUCK_COUNTER 0
	if ( CKN_STUCK_COUNTER > 4 ) callevent chicken_run_end "stuck_too_long"

	callevent 0.25 chicken_run_stuckcheck
}

{ chicken_run_end

	if CHICKEN_RUN
	////dbg CHICKEN RUN ENDED PARAM1

	setmoveanim ANIM_RUN
	setactionanim ANIM_ATTACK
	setidleanim ANIM_IDLE
	setvard CHICKEN_RUN 0
	setvard IS_FLEEING 0
	setvard PURE_FLEE 0
	setmoveanim ANIM_WALK
	if( NPCATK_FLEE_RESTORETARGET ) callevent npcatk_faceattacker HUNT_LASTTARGET
}

{ npcatk_target	//PARAM1 == entity to target

	//sets NPC attack target
	//this shoulda been in here a long time ago
	setvard IS_HUNTING 1
	setvard HUNT_LASTTARGET PARAM1
	setvard NPC_MOVE_TARGET PARAM1
	setmovedest HUNT_LASTTARGET ATTACK_RANGE
}

//Attempt to get mons to ignore prone skeletons not working (can't get monsters to ignore certain targets)
//{ npcatk_targetvalidate //PARAM1 = ent to validate

	////dbg NpcAtkValidate PlaynDead $get(PARAM1,scriptvar,PLAYING_DEAD) 
	//if ( $get(PARAM1,scriptvar,PLAYING_DEAD) == 1 ) 
	//{
	//	//dbg target is playing dead, ignoring
	//	setvard IGNORE_TARGET HUNT_LASTTARGET
	//	setvard HUNT_LASTTARGET ¯NONE¯
	//	setvard IS_HUNTING 0
	//}
//}

{ npcatk_adj_attack

	//TS basenpc_adj_attack and rename

	//Thothie - for future use
	//concept being: being spells, items, or npc scripts may adjust any monsters's hit damage and hit chance up or down
	//(eg. spell 'curse' or ms_npcscript make_strong)
	//to apply (example):
	//setvard FINAL_HITCHANCE ATTACK_HITRANGE
	//setvard FINAL_DAMAGE ATTACK_DAMAGE
	//callevent basenpc_get_final_damage
    //dodamage ent_lastseen ATTACK_HITRANGE FINAL_DAMAGE FINAL_HITCHANCE
	//set in npcatk_postspawn and remove these ifs
	//handled internally in npcatk_new
	if ( EXT_DAMAGE_ADJUSTMENT isnot 'EXT_DAMAGE_ADJUSTMENT' ) add FINAL_ATTACK_DAMAGE EXT_DAMAGE_ADJUSTMENT
	if ( EXT_HITCHANCE_ADJUSTMENT isnot 'EXT_HITCHANCE_ADJUSTMENT' ) add FINAL_HITCHANCE_DAMAGE EXT_HITCHANCE_ADJUSTMENT
}

{ npcatk_ally_alert //PARAM1 = Target - called from allies that are struck by players

	if HUNT_LASTTARGET equals ¯NONE¯
	callevent npcatk_target PARAM1
}

{ npcatk_check_if_scared_of //param1=target to check

	if ( IMMUNE_FIRE == 1 )
	{
		if ( $get(ent_lastheard,scriptvar,I_DO_FIRE_DAMAGE) == 1 ) setvard I_WILL_FLEE 0
	}

	if ( IMMUNE_COLD == 1 )
	{
		if ( $get(ent_lastheard,scriptvar,I_DO_COLD_DAMAGE) == 1 ) setvard I_WILL_FLEE 0
	}

	if ( IMMUNE_POISON == 1 )
	{
		if ( $get(ent_lastheard,scriptvar,I_DO_POISON_DAMAGE) == 1 ) setvard I_WILL_FLEE 0
	}
}

{ npcatk_vanish //param1 = time - if unset monster will not return until npcatk_vanish_return is called

	setvard NPC_VANISHED_AT game.monster.origin
	setorigin ent_me (20000,20000,20000)

	if ( NPC_VANISH_RETURN_TIME equals 'NPC_VANISH_RETURN_TIME' ) setvard NPC_VANISH_RETURN_TIME PARAM1
	//dbg Winking out from NPC_VANISHED_AT , be back in NPC_VANISH_RETURN_TIME
	callevent NPC_VANISH_RETURN_TIME npcatk_vanish_return
}

{ npcatk_vanish_return

	//dbg winking in to NPC_VANISHED_AT
	setorigin ent_me NPC_VANISHED_AT
	setvard NPC_STUCK_TELEPORT 0
}