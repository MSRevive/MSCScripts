//By greatguys1
//Best viewed in EditPlus with the ms.stx applied

//This quest is defend_me. This quest, when activated, spawns a series of enemies around an npc. The npc must live throughout the horde of enemies. The npc becomes a critical npc,
//and will be targeted by monsters. If he lives though a certain amount of enemies, the quest is completed. If he dies, the quest is lost.

//Vars:
//	const QUEST_DATA1			- <"scriptname;scriptname"> The scriptnames of all the monsters you want sieging the npc are all put here.
//	const QUEST_DATA2			- <"#;0|1"> How many enemies must be slain before the siege stops, and should I adjust the monsters stats depending on who took the quest?
//	const QUEST_DATA3			- <"random"|"info_target prefix"|"(x,y,z);(x,y,z)"> Where do the enemies spawn?
//	const DQ_DEFEND_ME_DEFENSE_POINT	- The point enemies spawn around if spawning is random. 
//	const DQ_MONSTER_LIST			- The token of monster scriptnames from the template.
//	const DQ_MONSTER_LIMIT			- Monsters required to be killed to finish the quest.
//	const DQ_SELF_ADJUST			- Force the monsters to adjust their health and xp according to whoever took the quest.
//	const DQ_SPAWN_POINTS			- Contains the info_target prefix or vectors or "random" for the spawn points
//	const DQ_MOSNTER_HP_MULT		- Multiply this by QUEST_TAKER_MAXHP and set the result to the health of the spawned enemies.
//	const DQ_MONSTER_XP_MULT		- Multiply this by QUEST_TAKER_MAXHP and set the result to the xp of the spawned enemies.
//	const DQ_MONSTER_SPAWN_TIME		- Time it takes for another monster to be allowed to spawn.
//	setvard DQ_MONSTERS_AVAILABLE		- How many monsters are you allowed to spawn right now?
//	setvard DQ_MONSTERS_KILLED		- How many monsters killed.
//	array MONSTER_SPAWN_ORIGINS		- Contains the coordinates of several points monsters are allowed to spawn at if the spawning isn't random.
//	setvard MONSTER_ORIGIN_AMT		- How many different points are there to spawn monsters at?
//	setvard EFFECT_ME			- Current enemy targeted to apply various effects or externals on.
//	setvard CAN_POPULATE_AGAIN		- Checks if CAN_POPULATE_AGAIN <= game.time assuming CAN_POPULATE_AGAIN is game.time + DQ_MOSNTER_SPAWN_TIME
//
//Functions:
//	quest_activate				- Starts spawning the monsters, changes the race to "human", invinvible to 0, and if spawning isn't random, callevent to check origins or info_targets
//	quest_begin_handle_origins		- Decides whether vectors or info_targets are being used as spawn points.
//	quest_handle_info_targets		- Adds the info_target vectors into the MONSTER_SPAWN_ORIGINS array.
//	quest_handle_vectors			- Adds the vectors directly from QUEST_DATA3 into the MONSTER_SPAWN_ORIGINS array.
//	populate_area				- Selects and spawns the enemies onto either the pre-defined spawn points or in a random area around DQ_DEFEND_ME_DEFENSE_POINT. Also calls dq_apply_externals and as_tele_stuck_check to the monsters.
//	dq_apply_externals			- Applies various effects and/or externals onto the monster.
//	ext_effected_monster_killed		- Called from the effect dq/externals/dq_apply_callback_on_death

#scope server

{
	const DQ_DEFEND_ME_DEFENSE_POINT $get(ent_me,origin)
	const DQ_MONSTER_LIST QUEST_DATA1
	const DQ_MONSTER_LIMIT $get_token(QUEST_DATA2,0)
	const DQ_SELF_ADJUST $get_token(QUEST_DATA2,1)
	const DQ_SPAWN_POINTS QUEST_DATA3
	const DQ_MONSTER_HP_MULT 0.5
	const DQ_MONSTER_XP_MULT 0.5
	const DQ_MONSTER_SPAWN_TIME 2.0

	setvard DQ_MONSTERS_AVAILABLE 5
	setvard DQ_MONSTERS_KILLED 0
}

#include dq/quests/bases/dq_base_quests

{ quest_activate

	callevent DQ_MONSTER_SPAWN_TIME populate_area //To get it started. Spawn time is so the origin handler thingy has time to work at first.
	invincible 0 //So the npc is allowed to die. You're welcome
	race human

	if ( DQ_SPAWN_POINTS isnot 'random' )
	{
		callevent quest_begin_handle_origins //Ripped from fetch_items which is (mostly) ripped from Thothie's fire wyrm pit getter. Inception.jpeg
	}
}

{ quest_begin_handle_origins //Most of the function is influenced from Thothie's fire wyrm pit getter. Thenks bruh

	array.create MONSTER_SPAWN_ORIGINS

	local L_INFO_TARGET_NAME DQ_SPAWN_POINTS
	stradd L_INFO_TARGET_NAME '1' //This is just a tester to see if it should look for info targets or just take vectors

	local L_INFO_TARGET_ID $get_by_name(L_INFO_TARGET_NAME)

	if ( $get(L_INFO_TARGET_ID,exists) )
	{
		callevent quest_handle_info_targets //This cant be on a loop because we don't know exactly how much info_targets they are until we find one that doesn't exist
	}
	else if ( DQ_SPAWN_POINTS startswith '(' ) //If it starts with that it has to be vectors
	{
		setvard MONSTER_ORIGIN_AMT $get_token_amt(DQ_SPAWN_POINTS)
		calleventloop MONSTER_ORIGIN_AMT quest_handle_vectors //I can call this on a loop because I can see how many tokens are in DQ_SPAWN_POINTS
	}
	else
	{
		dbg "No proper origins were found, defend_me cannot spawn enemies!"
	}
}

{ quest_handle_info_targets //For organization

	local L_INFO_TARGET_NAME DQ_SPAWN_POINTS
	local L_MONSTER_ORIGIN_AMT MONSTER_ORIGIN_AMT
	local L_MONSTER_ORIGIN_AMT $int($math(add,L_MONSTER_ORIGIN_AMT,1)) //$math tends to add .00 at the end. It'll try to look for .00 in the info target if I don't do $int
	stradd L_INFO_TARGET_NAME L_MONSTER_ORIGIN_AMT

	local L_INFO_TARGET_ID $get_by_name(L_INFO_TARGET_NAME)

	if ( $get(L_INFO_TARGET_ID,exists) )
	{
		array.add MONSTER_SPAWN_ORIGINS $get(L_INFO_TARGET_ID,origin)
		setvard MONSTER_ORIGIN_AMT $math(add,MONSTER_ORIGIN_AMT,1)

		callevent 0.1 quest_handle_info_targets
	}
}

{ quest_handle_vectors //For organization

	array.add MONSTER_SPAWN_ORIGINS $get_token(DQ_SPAWN_POINTS,game.script.iteration)
}

{ populate_area //This starts spawning the monsters around the npc

	if ( QUEST_MODE equals 'active' )
	{
		if ( DQ_MONSTERS_AVAILABLE > 0 )
		{
			if ( DQ_SPAWN_POINTS equals 'random' )
			{
				local L_R_DIST $randf(128,256)	//Thanks Thothie for the vecrors
				local L_R_YAW $randf(0,359.99)

				local L_POS DQ_DEFEND_ME_DEFENSE_POINT
				vectoradd L_POS $relpos($vec(0,L_R_YAW,0),$vec(0,L_R_DIST,0))
			}
			else
			{
				local L_IDX $rand(0,$math(subtract,$get_array_amt(MONSTER_SPAWN_ORIGINS),1)) //Starts indexing at 0, so we'd have an extra index if we didn't subtract 1
				local L_POS $get_array(MONSTER_SPAWN_ORIGINS,L_IDX)
			}

			local L_R_SCRIPT $rand(0,$math(subtract,$get_token_amt(DQ_MONSTER_LIST),1)) //Starts indexing at 0, so we'd have an extra index if we didn't subtract 1

			createnpc $get_token(DQ_MONSTER_LIST,L_R_SCRIPT) L_POS
			setvard EFFECT_ME $get(ent_lastcreated,id)

			if ( DQ_SPAWN_POINTS equals 'random' ) //Random should have the only chance of ever spawning an npc in a wall
			{
				callexternal EFFECT_ME as_tele_stuck_check
			}
			callevent 1.1 dq_apply_externals //Monsters should never not get the effect as long as the spawn time is greater than 1.1 seconds
			//I really dont like this.

			setvard DQ_MONSTERS_AVAILABLE $math(subtract,DQ_MONSTERS_AVAILABLE,1)
		}
		if ( CAN_POPULATE_AGAIN <= game.time )
		{
			setvard CAN_POPULATE_AGAIN $math(add,game.time,DQ_MONSTER_SPAWN_TIME)
			callevent DQ_MONSTER_SPAWN_TIME populate_area
		}
	}
}

{ dq_apply_externals //Because I *think* applying effects will only work after 1.1 seconds after the monster is created. I don't remember how I came to that conclusion

	callexternal EFFECT_ME set_quest_miniboss 1 //For the DOT adjustments

	//The DOT adjustments are done via effects/base_effect. All it requires is the QUEST_MINIBOSS var set to 1, done via
	//callexternal MONSTERID set_quest_miniboss 1

	applyeffect EFFECT_ME dq/externals/dq_apply_callback_on_death $get(ent_me,id)

	if ( DQ_SELF_ADJUST )
	{
		applyeffect EFFECT_ME dq/externals/dq_adjust_damage $get(ent_me,id)

		callexternal EFFECT_ME set_xp $math(multiply,QUEST_TAKER_MAXHP,DQ_MONSTER_XP_MULT)

		local L_HEALTH $math(multiply,QUEST_TAKER_MAXHP,DQ_MONSTER_HP_MULT)
		callexternal EFFECT_ME ext_set_health L_HEALTH L_HEALTH
	}
}

{ ext_effected_monster_killed //Called from dq/externals/dq_apply_callback_on_death

	setvard DQ_MONSTERS_KILLED $math(add,DQ_MONSTERS_KILLED,1)
	setvard DQ_MONSTERS_AVAILABLE $math(add,DQ_MONSTERS_AVAILABLE,1)

	if ( DQ_MONSTERS_KILLED >= DQ_MONSTER_LIMIT )
	{
		callevent quest_finished_check
	}
	else if ( CAN_POPULATE_AGAIN < game.time )
	{
		setvard CAN_POPULATE_AGAIN $math(add,game.time,DQ_MONSTER_SPAWN_TIME)
		callevent DQ_MONSTER_SPAWN_TIME populate_area
	}
}