//Must be created via createnpc.
//PARAM1 = <targetId|origin>

//Anything that uses "!startswith '('" means its checking if it is an entity

//Swirly beam effect that jumps to a target at first, then beams to enemies, or randomly around
//hover on target ~2 sec before jumping to next

//Has server-side and client-side counterparts in one script.
//Server tracks enemy targeting & jumping, client side handles fx.
//Removed "cleffect ce" usage //greatguys1@JAN2022

#scope server

{
	const MAX_JUMPS 6
	setvar CUR_JUMPS 0
	//setvar FX_SCRIPT_ID none
}

{ game_spawn

	name "a|Swirly Lightning Effect :)"

	setmodel "null.mdl"
	race beloved
	invincible 1
	height 0
	width 0
	setsolid none
	
	callevent 120.0 end_me_please
}

{ game_dynamically_created //<targetId|origin> <owner>

	setvard FX_TARGET PARAM1
	setvard FX_OWNER PARAM2
	
	clientevent new all $get(ent_me,scriptname) $get(FX_OWNER,origin)
	setvard FX_SCRIPT_ID game.script.last_sent_id
	
	callevent 0.1 jump_beam
}

{ jump_beam
	//scan area for new beam target
	//make sure doesn't match index of reported target (if isent)
	//if cant find new ent, trace line to random location and send result, otherwise send new model index
	
	if ( CUR_JUMPS != 0 ) //Never scan on the first jump
	{
		if ( FX_TARGET !startswith '(' )
		{
			callevent scan_target $get(FX_TARGET,origin)
		}
		else
		{
			callevent scan_target FX_TARGET
		}
	}
	
	if ( FX_TARGET !startswith '(' )
	{
		callevent beam_damage
		clientevent update all FX_SCRIPT_ID beam_jump $get(FX_TARGET,index)
	}
	else
	{
		clientevent update all FX_SCRIPT_ID beam_jump FX_TARGET
	}
	
	add CUR_JUMPS 1
	if ( CUR_JUMPS >= MAX_JUMPS )
	{
		callevent 2.0 end_me_please
	}
	else
	{
		callevent 2.0 jump_beam
	}
}

{ scan_target //Scans and stores target

	local SCAN_ORG PARAM1
	vectorset SCAN_ORG z $get_ground_height(SCAN_ORG)
	vectoradd SCAN_ORG 32

	callexternal FX_OWNER ext_sphere_token enemy 270 SCAN_ORG //Player scans for enemies
	local BEAM_TARGS $get(FX_OWNER,scriptvar,'PLR_SCAN_TOKEN')

	local DO_RANDOM_JUMP 0

	if ( BEAM_TARGS isnot none )
	{
		local BEAM_TARGS $sort_entlist(BEAM_TARGS,range,SCAN_ORG)
		local CUR_TARG $get_token(BEAM_TARGS,0)
		local N_TARGS $get_token_amt(BEAM_TARGS)
		
		if ( N_TARGS > 1 )
		{
			local CUR_TARG $get_token(BEAM_TARGS,1)
		}
		if ( CUR_TARG equals FX_TARGET ) local DO_RANDOM_JUMP 1 //target is last target struck, didn't find new one, jump random loc instead
		setvard FX_TARGET CUR_TARG
	}
	else
	{
		local DO_RANDOM_JUMP 1 //no new targets, jump to random loc
	}

	if ( DO_RANDOM_JUMP )
	{
		if ( FX_TARGET !startswith '(' )
		{
			setvard FX_TARGET $get(FX_TARGET,origin)
		}
		
		local L_OLD_TARG FX_TARGET
		
		vectoradd FX_TARGET $relpos($vec(0,$randf(0,359),0),$vec(0,270,32))
		setvard FX_TARGET $get_traceline(L_OLD_TARG,FX_TARGET,worldonly)
	}
}

{ beam_damage //Damage and burn stored id

	local L_DMG $get(FX_OWNER,skill.spellcasting.lightning)
	local L_DMG_DIRECT L_DMG
	multiply L_DMG_DIRECT 3
	xdodamage FX_TARGET direct L_DMG_DIRECT 100% FX_OWNER FX_OWNER spellcasting.lightning lightning_effect
	local L_DOT L_DMG
	multiply L_DOT 0.5
	applyeffect FX_TARGET effects/dot_lightning 5.0 FX_OWNER L_DOT
}

{ end_me_please

	clientevent update all FX_SCRIPT_ID end_fx
	deleteme
}

{ func_is_ent //<param> //Returns 1 if the given param is an entity

	local L_RETURN 0
	if ( PARAM1 !startswith '(' ) local L_RETURN 1
	
	return **clear
	return L_RETURN
}

//-----------------------
//---------- CLIENT SIDE
//-----------------------

{ [client]

	const BONE_BEAM_WIDTH 5
	const JUMP_BEAM_WIDTH 10

	const SOUND_IDLEZAP1 debris/zap4.wav
	const SOUND_IDLEZAP2 debris/zap2.wav
	const SOUND_IDLEZAP3 debris/zap5.wav
	const SOUND_ZAP_TARG magic/lightning_strike2.wav
}
	
{ [client] client_activate //<start_origin> <origin|target>
//Should have either target or origin. Should detect.
//Only beaming matters when it has the target, so param
	local FX_ORIGIN PARAM1
	
	setcallback render enable

	setvard GOT_NEW_TARG 0
	setvard SWIRL_ROT 0
	
	setvard BEAM_TARG FX_ORIGIN
	setvard OLD_TARG FX_ORIGIN
	
	setvard FX_ACTIVE 1
	callevent 0.2 fx_loop

	callevent 120.0 end_fx //just in case client locks/drops and beam tries to go on forever
}

{ [client] game_prerender //static fx for enemy last hit
	if FX_ACTIVE
	if STATIC_ACTIVE
	if BEAM_TARG !startswith '(' //if it doesn't start with this, then it hit an ent last hit
	
	local RND_BONE $rand(1,10)
	local BONE1_ORG $getcl(BEAM_TARG,bonepos,RND_BONE)
	local RND_BONE $rand(1,10)
	local BONE2_ORG $getcl(BEAM_TARG,bonepos,RND_BONE)

	//in case beyond # of available bones, or bones match
	if ( BONE1_ORG equals $vec(0,0,0) ) local BONE1_ORG $getcl(BEAM_TARG,origin)
	if ( BONE2_ORG equals $vec(0,0,0) ) local BONE2_ORG $getcl(BEAM_TARG,origin)
	if ( BONE2_ORG equals BONE1_ORG )
	{
		vectoradd BONE2_ORG $relpos($vec(0,$randf(0,359),0),$vec($randf(-48,48),$randf(-48,48),0))
	}
	
	cleffect beam_points BONE1_ORG BONE2_ORG lgtning.spr 0.001 BONE_BEAM_WIDTH 1 255 255 30 (255,64,0)
}

{ [client] fx_loop //coils while waiting to leap to next target

	if FX_ACTIVE

	callevent 0.05 fx_loop

	if SWIRL_ACTIVE
	
	local L_BEAM_START BEAM_TARG
	local L_BEAM_END L_BEAM_START
	add SWIRL_ROT 40
	if ( SWIRL_ROT > 359 ) setvard SWIRL_ROT 0
	vectoradd L_BEAM_END $relpos($vec(0,SWIRL_ROT,0),$vec(0,15,2))
	cleffect beam_points L_BEAM_START L_BEAM_END lgtning.spr 1.0 BONE_BEAM_WIDTH 1 255 255 30 (255,64,0)
	setvard BEAM_TARG L_BEAM_END
}

{ [client] beam_jump //<target|origin> //beams to target or origin

	if FX_ACTIVE

	setvard STATIC_ACTIVE 0
	setvard SWIRL_ACTIVE 0
	
	local L_TARGET PARAM1

	setvard OLD_TARG BEAM_TARG
	if ( OLD_TARG !startswith '(' )
	{
		setvard OLD_TARG $getcl(BEAM_TARG,origin)
	}
	else
	{
		setvard OLD_TARG BEAM_TARG
	}

	setvard BEAM_TARG L_TARGET

	if ( BEAM_TARG !startswith '(' )
	{
		local SOUND_ORG $getcl(BEAM_TARG,origin)
		cleffect beam_points OLD_TARG SOUND_ORG lgtning.spr 1.0 JUMP_BEAM_WIDTH 1 255 255 30 (255,64,0)

		setvard SWIRL_ACTIVE 0
		setvard STATIC_ACTIVE 1
	}
	else
	{
		cleffect beam_points OLD_TARG BEAM_TARG lgtning.spr 1.0 JUMP_BEAM_WIDTH 1 255 255 30 (255,64,0)
		setvard SWIRL_ACTIVE 1
		setvard STATIC_ACTIVE 0
		local SOUND_ORG BEAM_TARG
	}

	if ( SWIRL_ACTIVE )
	{
		local RND_ZAP $rand(1,3)
		if ( RND_ZAP == 1 ) sound.play3d SOUND_IDLEZAP1 10 SOUND_ORG
		if ( RND_ZAP == 2 ) sound.play3d SOUND_IDLEZAP2 10 SOUND_ORG
		if ( RND_ZAP == 3 ) sound.play3d SOUND_IDLEZAP3 10 SOUND_ORG
	}
	else
	{
		local RND_ZAP $rand(1,3)
		if ( RND_ZAP == 1 ) sound.play3d SOUND_ZAP_TARG 10 SOUND_ORG
	}
}

{ [client] end_fx
	setvard FX_ACTIVE 0
	removescript
}

{ [client] remove_fx
	setvard FX_ACTIVE 0
	removescript
}