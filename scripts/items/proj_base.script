//Removed CLIENT_PROJECTILE support. (Client side arrows that used "cleffect ce") //greatguys1@JAN2022

//Thothie - These reg's do not match up with the documented Scripting_Items.txt
//- Not entirely sure if they all work
//- Adding hitwall function in here (many projtiles using game_hitwall - which turns out to be wrong)
//Base Projectile
//1:32 PM 2/11/2005
//
//Req. Variables:
//PROJ_STICK_DURATION
//PROJ_DAMAGE

{
	const PROJ_COLLIDEHITBOX 1
	const PROJ_IGNORENPC 0
	const MODEL_WORLD	none
	const PROJ_MOTIONBLUR	1
	const PROJ_STICK_ON_NPC 1

	const CLFX_ARROW_SCRIPT items/proj_simple_cl
	const CLFX_ARROW_UPDATE_RATE 0.5
}

#include items/base_item_extras

{ game_spawn

	movetype projectile	//Causes the orientation to change based on velocity
	
	if ( !CLFX_ARROW )
	{
		setmodel MODEL_WORLD

		if ( PROJ_ANIM_IDLE isnot 'PROJ_ANIM_IDLE' ) 
		{
			if PROJ_ANIM_IDLE isnot 'none'
			playanim PROJ_ANIM_IDLE
		}

		if ( MODEL_BODY_OFS isnot 'MODEL_BODY_OFS' )
		{
			////dbg temp setting ofs MODEL_BODY_OFS
			setmodelbody 0 MODEL_BODY_OFS
		}
	}
	else
	{
		//CLFX_ARROW 1 - creates a client side model for the arrow, but still tracks the arrow server side
		width 32
		height 32
		setbbox npcsize
		setmodel none
	}

	if ( !HITSCAN_BOLT ) local reg.proj.dmg PROJ_DAMAGE
	else local reg.proj.dmg 0
	if ( HEAVY_ONLY ) local reg.proj.dmg PROJ_DAMAGE
	local reg.proj.dmgtype 		PROJ_DAMAGE_TYPE
	local reg.proj.aoe.range 	PROJ_AOE_RANGE
	local reg.proj.aoe.falloff 	PROJ_AOE_FALLOFF
	local reg.proj.stick.duration 	PROJ_STICK_DURATION //this is commented out in code, no effect
	local reg.proj.collidehitbox PROJ_COLLIDEHITBOX //this is a boolean, decides if to use projectile's hitbox or not
	local reg.proj.ignorenpc PROJ_IGNORENPC //collide only with world, pass through NPCs if set 1
	setmonsterclip 0

	registerprojectile
	
	callevent projectile_spawn
}

{ game_fall
	
	if ( MODEL_BODY_OFS isnot 'MODEL_BODY_OFS' )
	{
		////dbg temp setting ofs MODEL_BODY_OFS
		setmodelbody 0 MODEL_BODY_OFS
	}
}

{ game_tossprojectile

	if ( CLFX_ARROW )
	{
		callevent 0.01 update_clfx_projectile
	}
	
	//dbg game_tossprojectile $get(ent_me,itemname)
	setvard MY_XBOW $get(ent_expowner,active_item)

	//setvard MY_OWNER $get(ent_expowner,id)

	if ( MODEL_BODY_OFS isnot 'MODEL_BODY_OFS' )
	{
		////dbg temp setting ofs MODEL_BODY_OFS
		if ( !CLFX_ARROW ) setmodelbody 0 MODEL_BODY_OFS
	}
	useable 0 //Can't be picked up after it's shot/tossed
	if ( PROJ_MOTIONBLUR )
	{
		if !CLFX_ARROW
		clientevent new all_in_sight effects/sfx_motionblur $get(ent_me,index) MODEL_BODY_OFS
	}
	callevent game_fall

	if ( HITSCAN_BOLT ) callevent hitscan_bolt
}

{ game_projectile_landed

	dbg game_projectile_landed

	if ( CLFX_ARROW )
	{
		setvard CLFX_ARROW_IN_FLIGHT 0
		clientevent update all CLFX_ARROW_IDX end_fx landed
	}
	
	movetype	none	//Back to normal movement
	if ( !PROJ_STICK_ON_WALL_NEW )
	{
		expiretime 0
	}
	else
	{
		//expiretime PROJ_STICK_DURATION
		setmodel MODEL_WORLD
		setmodelbody 0 MODEL_BODY_OFS
		solidifyprojectile
	}

	callevent projectile_landed

	if ( PROJ_STICK_DURATION == 0 ) callevent remove_projectile landed
	if ( PROJ_STICK_DURATION > 0 )
	{
		callevent PROJ_STICK_DURATION remove_projectile
	}
}

//{ ext_touch
//	dbg ext_touch PARAM1
//	projectiletouch PARAM1
//}

{ game_touch
	if PROJ_REMOVE_ON_USE
	if !PROJ_DELETING
	dbg $get(PARAM1,name)
	if ( $get(PARAM1,keydown,use) )
	{
		setvard PROJ_DELETING 1
		playsound 0 10 SOUND_HITWALL1
		callevent remove_projectile touch_used
	}
	if !$get(PARAM1,isplayer)
	setvard PROJ_DELETING 1
	callevent remove_projectile touch_remove
	clientevent update all CLFX_ARROW_IDX ext_touch $get(PARAM1,index)
}

//Event fixed and should now remove arrow properly //greatguys1@FEB2022
{ game_projectile_hitwall

	playrandomsound game.sound.weapon HITWALL_VOL SOUND_HITWALL1 SOUND_HITWALL2

	if ( PROJ_STICK_DURATION == 0 ) callevent remove_projectile hitwall
}

{ ext_lighten //param1 = gravity, called externally

	gravity PARAM1
	if ( CLFX_ARROW ) clientevent update all CLFX_ARROW_IDX ext_lighten PARAM1
}

{ ext_scale
	setprop ent_me scale PARAM1
	if ( CLFX_ARROW ) clientevent update all CLFX_ARROW_IDX ext_scale PARAM1
}

{ [server] hitscan_bolt

	if ( HEAVY_ONLY )
	{
		local EXIT_SUB 1
		if ( $get(MY_XBOW,name) contains Heavy )
		{
			local EXIT_SUB 0
			gravity 0
			//dbg adjusting for heavy
		}
		if ( $get(MY_XBOW,name) contains Steam )
		{
			local EXIT_SUB 0
			gravity 0
			//dbg adjusting for heavy
		}
	}
	if !EXIT_SUB


	local START_TRACE $get(ent_me,origin)
	local V_MY_DEST $relpos($vec($neg(game.monster.angles.pitch),game.monster.angles.yaw,game.monster.angles.roll),$vec(0,8000,0))
	local MY_DEST START_TRACE
	vectoradd MY_DEST V_MY_DEST

	//debug beam
	//effect beam point lgtning.spr 20 START_TRACE MY_DEST (255,0,255) 200 0 3
	local HIT_TARG $get_traceline(START_TRACE,MY_DEST,npc)

	if ( HIT_TARG equals $get(ent_expowner,id) )
	{
		local EXIT_SUB 1
		callevent 0.01 hitscan_bolt
	}
	if !EXIT_SUB

	local MY_DAMAGE $get(ent_expowner,skill.archery)
	multiply MY_DAMAGE 0.01
	multiply MY_DAMAGE PROJ_DAMAGE
	local DMG_MULTI $get(MY_XBOW,scriptvar,'HITSCAN_DMG_MULTI')
	if ( DMG_MULTI > 0 ) multiply MY_DAMAGE DMG_MULTI

	if ( !$get(HIT_TARG,isalive) )
	{
		setorigin ent_me HIT_TARG
		setvard BOLT_TRACE_END $get_traceline(START_TRACE,MY_DEST,worldonly)
		xdodamage START_TRACE MY_DEST MY_DAMAGE 100% ent_expowner ent_me archery PROJ_DAMAGE_TYPE dmgevent:*bolt
	}

	if ( $get(HIT_TARG,isalive) )
	{
		setorigin ent_me $get(HIT_TARG,origin)
		callevent strike_target HIT_TARG
	}

//	local HIT_TARG $get_traceline(START_TRACE,MY_DEST,ent)
//	dbg hitscan_bolt HIT_TARG
//	if ( !$get(HIT_TARG,isalive) ) setorigin ent_me HIT_TARG
//
//	if $get(HIT_TARG,isalive)
//	if ( HIT_TARG equals MY_OWNER )
//	{
//		callevent 0.1 hitscan_bolt
//		local EXIT_SUB 1
//	}
//	if !EXIT_SUB
//
//	callevent strike_target HIT_TARG
}

{ strike_target

	if !BP_HIT_TARGET
	setvard BP_HIT_TARGET 1

	setorigin ent_me $get(PARAM1,origin)

	local MY_DAMAGE $get(ent_expowner,skill.archery)
	multiply MY_DAMAGE 0.01
	multiply MY_DAMAGE PROJ_DAMAGE
	local DMG_MULTI $get(MY_XBOW,scriptvar,'HITSCAN_DMG_MULTI')
	if ( DMG_MULTI > 0 ) multiply MY_DAMAGE DMG_MULTI
	//dbg hit $get(MY_XBOW,name) : $get(PARAM1,name) for MY_DAMAGE with PROJ_DAMAGE_TYPE ( skill $get(MY_OWNER,skill.archery) )
	xdodamage PARAM1 direct MY_DAMAGE 100% ent_expowner ent_expowner archery PROJ_DAMAGE_TYPE

	if ( !PROJ_STICK_ON_NPC ) callevent remove_projectile strike_target
}

//{ game_dodamage
	//setorigin ent_me PARAM4 //This causes an issue where xdodamage will make the arrow stick to other entities. //greatguys1@JAN2022
//}

{ game_projectile_hitnpc //tracelin and projectile touch work different

	//dbg game_projectile_hitnpc $get(PARAM1,name)
	if ( CLFX_ARROW )
	{
		setvard CLFX_ARROW_IN_FLIGHT 0
		clientevent update all CLFX_ARROW_IDX ext_hitnpc $get(PARAM1,index)
	}
	
	if HITSCAN_BOLT
	local OUT_TARG PARAM1
	callevent strike_target OUT_TARG
}

{ remove_projectile

	if ( CLFX_ARROW isnot 'CLFX_ARROW' )
	{
		setvard CLFX_ARROW_IN_FLIGHT 0
		if ( CLFX_ARROW_NOSTICK ) clientevent update all CLFX_ARROW_IDX end_fx PARAM1
	}

	expiretime 0
	deleteme
}

{ update_clfx_projectile
	//these have to be assembled and sent, as there's no actual model for client to grab info from
	if ( !CLFX_ARROW_INIT )
	{
		setvard CLFX_ARROW_INIT 1
		setvard CLFX_ARROW_IN_FLIGHT 1

		local L_INFO_TOKENS $get(ent_me,origin)
		token.add L_INFO_TOKENS $get(ent_me,angles)
		token.add L_INFO_TOKENS $get(ent_me,velocity)
		token.add L_INFO_TOKENS $int(PROJ_ANIM_IDLE)
		token.add L_INFO_TOKENS $get(ent_me,gravity)
		token.add L_INFO_TOKENS PROJ_STICK_ON_NPC

		local L_MODEL_BODY_OFS MODEL_BODY_OFS
		if ( MODEL_BODY_OFS equals 'MODEL_BODY_OFS' ) local L_MODEL_BODY_OFS 0
		//dbg game_tossprojectile using clfx - L_ANIM_IDX
		clientevent new all CLFX_ARROW_SCRIPT $get(ent_me,index) $get(ent_expowner,index) L_INFO_TOKENS MODEL_WORLD L_MODEL_BODY_OFS PROJ_MOTIONBLUR CLFX_ARROW_TAGS
		setvard CLFX_ARROW_IDX game.script.last_sent_id
		callevent CLFX_ARROW_UPDATE_RATE update_clfx_projectile
	}
	else
	{
		if CLFX_ARROW_IN_FLIGHT
		clientevent update all CLFX_ARROW_IDX ext_update $get(ent_me,origin) $get(ent_me,angles) $get(ent_me,velocity)
		callevent CLFX_ARROW_UPDATE_RATE update_clfx_projectile
	}
}

{ ext_render //<rendermode> <renderamt>
	setprop ent_me rendermode PARAM1
	setprop ent_me renderamt PARAM2
}