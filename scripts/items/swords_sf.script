// (Dark dmg, 100% fire DOT, 50% fire dmg deduct, fire burst, fire wave)

{
	const BASE_LEVEL_REQ 25

	const FIRE_WAVE_MP 20
	const FIRE_BURST_MP 30

	const ANIM_LIFT 0
	const ANIM_IDLE1 1
	const ANIM_ATTACK1 2
	const ANIM_ATTACK2 2
	const ANIM_ATTACK3 2
	const ATTACK_ANIMS 1
	const ANIM_LUNGE 3
	const ANIM_PARRY1 4
	const ANIM_PARRY1_RETRACT 5
	const ANIM_UNSHEATH 6
	const ANIM_SHEATH 7

	const MODEL_HANDS weapons/p_weapons3.mdl
	const MODEL_WORLD weapons/p_weapons3.mdl
	const MODEL_VIEW viewmodels/v_2hswords.mdl
	const MODEL_VIEW_IDX 11
	const MODEL_BODY_OFS 84

	const ANIM_PREFIX standard

	const MELEE_RANGE  80
	const MELEE_DMG_DELAY  0.6
	const MELEE_ATK_DURATION 1.3
	const MELEE_ENERGY  1
	const MELEE_DMG  275
	const MELEE_DMG_RANGE      140
	const MELEE_DMG_TYPE  dark
	const MELEE_ACCURACY  75%
	const MELEE_STAT  swordsmanship
	const MELEE_ALIGN_BASE 3,10 
	const MELEE_ALIGN_TIP  0,-10
	const MELEE_VIEWANIM_ATK      ANIM_ATTACK1

	const MELEE_SOUND      SOUND_SWIPE
	const MELEE_SOUND_DELAY      MELEE_DMG_DELAY
	const MELEE_PARRY_CHANCE      60%
	const MELEE_NEW_PARRY_CHANCE  50

	const PLAYERANIM_AIM  sword_double_idle
	const PLAYERANIM_SWING sword_double_swing

	const SOUND_SWIPE       weapons/swingsmall.wav
	const SOUND_HITWALL1       weapons/cbar_hit1.wav
	const SOUND_HITWALL2       weapons/cbar_hit2.wav
	const SOUND_DRAW       weapons/swords/sworddraw.wav
	const SOUND_SHOUT $get(ent_owner,scriptvar,'PLR_SOUND_SHOUT1')
	const SPECIAL01_SND $get(ent_owner,scriptvar,'PLR_SOUND_JAB2')
}

#include items/swords_base_twohanded

{ weapon_spawn

	name  a|Shadowfire Blade
	desc  This is a twisted blade of elemental fire 
	weight  75
	size  9
	value 3750
	sethudsprite trade 167

	sethand both
}

{ game_deploy
	setvard GAME_PVP game.pvp
	setvard OWNER_SWORDSKILL $get(ent_owner,skill.swordsmanship)
	setvard OWNER_FIRESKILL $get(ent_owner,skill.spellcasting.fire)
}

{ register_charge1

	local reg.attack.type strike-land
	local reg.attack.range MELEE_RANGE
	multiply reg.attack.range 3.0
	local reg.attack.noautoaim 1
	local reg.attack.dmg MELEE_DMG
	multiply reg.attack.dmg	4.0
	local reg.attack.dmg.range MELEE_DMG_RANGE
	local reg.attack.dmg.type MELEE_DMG_TYPE
	local reg.attack.energydrain MELEE_ENERGY
	local reg.attack.stat MELEE_STAT
	local reg.attack.hitchance MELEE_ACCURACY
	local reg.attack.delay.strike 1.4
	local reg.attack.delay.end 2.0
	local reg.attack.ofs.startpos MELEE_STARTPOS
	local reg.attack.ofs.aimang MELEE_AIMANGLE
	local reg.attack.noise MELEE_NOISE

	local reg.attack.priority 2
	local reg.attack.keys -attack1
	local reg.attack.callback fire_wave
	local reg.attack.chargeamt 200%
	local reg.attack.reqskill 34
	registerattack
}

{ [override] melee_start

	if ( PARRY_ON ) callevent exit_parry melee_start

	local R_SWING $rand(1,3)
	if( R_SWING == 1 ) local SWING_ANIM ANIM_ATTACK1
	if( R_SWING == 2 ) local SWING_ANIM ANIM_ATTACK2
	if( R_SWING == 3 ) local SWING_ANIM ANIM_ATTACK3
	playowneranim once sword_double_swing
	playviewanim  SWING_ANIM
	playsound 1 10 SOUND_SWIPE
}

{ [override] special_01_start

	if ( PARRY_ON ) callevent exit_parry special_01_start
	playviewanim  ANIM_LUNGE
   	playowneranim once axe_twohand_swing
 	playsound const.snd.weapon const.snd.maxvol SPECIAL01_SND
}

{ fire_wave_start
	playviewanim  ANIM_LUNGE
   	playowneranim once axe_twohand_swing
 	playsound const.snd.weapon const.snd.maxvol SOUND_SHOUT
}

{ game_dodamage
	if PARAM1
	if ( $get(PARAM2,isplayer) )
	{
		if !GAME_PVP
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	local DOT_BURN $get(ent_owner,skill.spellcasting.fire)
	multiply DOT_BURN 0.75
	applyeffect PARAM2 effects/dot_fire 5.0 $get(ent_owner,id) DOT_BURN swordsmanship
}


{ fire_wave_strike ////PARAM1: "none"/"npc"/"world"   2: Attack end Position   3: Entity hit (if any)
	if game.serverside

	local ATTACK_END_POS PARAM2

	if $vec.z(ATTACK_END_POS) equals $get_ground_height(ATTACK_END_POS)

	if $get(ent_owner,skill.spellcasting.fire) >= 25

	if ( $get(ent_owner,mp) < FIRE_WAVE_MP )
	{
		dplayermessage ent_owner Shadowfire Blade: Insufficient MP for Fire Wave
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	givemp ent_owner $neg(FIRE_WAVE_MP)

	callevent do_fire_wave $get(ent_owner,origin)
}

{ do_fire_wave
	playsound 0 7 magic/flame_loop_start.wav

	setvard FIRE_WAVE_START_POS PARAM1
	setvard FIRE_WAVE_YAW $get(ent_owner,angles.yaw)
	clientevent new all effects/sfx_fire_wave FIRE_WAVE_START_POS FIRE_WAVE_YAW

	local FIRE_WAVE_SCAN_POS FIRE_WAVE_START_POS
	vectoradd FIRE_WAVE_SCAN_POS $relpos($vec(0,FIRE_WAVE_YAW,0),$vec(0,128,32))

	callexternal ent_owner ext_sphere_token enemy 1024 FIRE_WAVE_SCAN_POS
	setvard FIRE_WAVE_TARGS $get(ent_owner,scriptvar,'PLR_SCAN_TOKEN')

	if FIRE_WAVE_TARGS isnot none
	setvard WAVE_DOT_BURN $get(ent_owner,skill.spellcasting.fire)
	multiply WAVE_DOT_BURN 1.5
	setvard OWNER_ORG FIRE_WAVE_START_POS
	setvard OWNER_ANG $vec(0,FIRE_WAVE_YAW,0)
	calleventloop $get_token_amt(FIRE_WAVE_TARGS) fire_wave_affect_targs


	callevent 1.0 do_fire_wave2
}

{ do_fire_wave2

	//this repeats, to simiulate the fire wave lasting more than a second

	local FIRE_WAVE_SCAN_POS FIRE_WAVE_START_POS
	vectoradd FIRE_WAVE_SCAN_POS $relpos($vec(0,FIRE_WAVE_YAW,0),$vec(0,128,32))
	callexternal ent_owner ext_sphere_token enemy 1024 FIRE_WAVE_SCAN_POS
	setvard FIRE_WAVE_TARGS $get(ent_owner,scriptvar,'PLR_SCAN_TOKEN')

	if FIRE_WAVE_TARGS isnot none
	calleventloop $get_token_amt(FIRE_WAVE_TARGS) fire_wave_affect_targs
}


{ fire_wave_affect_targs

	local CUR_TARG $get_token(FIRE_WAVE_TARGS,game.script.iteration)

	if ( $get(CUR_TARG,isplayer) )
	{
		if !GAME_PVP
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	local TARG_ORG $get(CUR_TARG,origin)

	dbg fire_wave_affect_targs $within_cone2D(TARG_ORG,OWNER_ORG,OWNER_ANG,120) $get(CUR_TARG,name)

	if $within_cone2D(TARG_ORG,OWNER_ORG,OWNER_ANG,120)

	local TRACE_START FIRE_WAVE_START_POS
	local TRACE_END TARG_ORG
	local TRACE_LINE $get_traceline(TRACE_START,TRACE_END,worldonly)
	if TRACE_LINE equals TRACE_END

	applyeffect CUR_TARG effects/dot_fire 5.0 $get(ent_owner,id) WAVE_DOT_BURN swordsmanship
}

{ game_+attack2
	if game.serverside
	if !game.item.attacking

	if $get(ent_owner,canattack)

	if ( !PARRY_ON )
	{
		if game.time > NEXT_PARRY
		splayviewanim ent_me ANIM_PARRY1
		setvard FIRE_AURA_BEGIN game.time
		add FIRE_AURA_BEGIN 2.0
		setvard PARRY_ON 1
		setvard NEXT_PARRY game.time
		add NEXT_PARRY 1.0
	}

	if ( PARRY_ON )
	{
		if !FAURA_ACTIVE
		if OWNER_FIRESKILL >= 30
		if game.time > FIRE_AURA_BEGIN
		setvard FAURA_RAD 64
		setvard FAURA_ACTIVE 1
		if ( $get(ent_owner,mp) <= 10 )
		{
			dplayermessage ent_owner "Shadowfire Blade: Insufficient mana for Shadowfire Aura"
			setvard FIRE_AURA_BEGIN game.time
			add FIRE_AURA_BEGIN 5.0
			local EXIT_SUB 1
			if ( FAURA_ACTIVE ) callevent end_faura
		}
		if !EXIT_SUB
		setvard FAURA_ACTIVE 1
		callexternal ent_owner ext_sfaura_start $get(ent_me,id)
	}
}

{ game_-attack2
	if ( PARRY_ON ) callevent exit_parry
}

{ bweapon_effect_remove
	if ( FAURA_ACTIVE ) callevent end_faura
}

{ exit_parry
	setvard NEXT_PARRY game.time
	add NEXT_PARRY 1.0
	setvard PARRY_ON 0
	if ( FAURA_ACTIVE ) callevent end_faura
	if ( !game.item.attacking ) splayviewanim ent_me ANIM_PARRY1_RETRACT
}

{ bs_global_command
	if PARAM3 equals death
	if PARAM1 equals $get(ent_owner,id)
	if ( FAURA_ACTIVE ) callevent end_faura
}

{ end_faura
	setvard FAURA_ACTIVE 0
	callexternal ent_owner ext_sfaura_end remote
}

{ ext_faura_ended
	setvard FAURA_ACTIVE 0
}

//50% fire damage reduction
{ game_takedamage //PARAM1=attacker  PARAM2=inflictor? PARAM3=dmg PARAM4=dmg_type - use return to alter incoming damage

	if $get(ent_owner,scriptvar,'PLR_ACTIVE_WEAPON') equals $get(ent_me,id)

	if ( PARRY_ON )
	{
		if ( PARAM4 contains effect ) local NO_ABSORB 1
		if !NO_ABSORB
		local IN_DMG PARAM3
		multiply IN_DMG 0.5
		setdmg dmg IN_DMG
		return 0.5
	}

	if PARAM4 contains fire
	local IN_DMG PARAM3
	multiply IN_DMG 0.5
	setdmg dmg IN_DMG
	return 0.5
}

{ bweapon_effect_remove
	setvard PARRY_ON 0
}

{ special_01_strike
	if ( $get(ent_owner,mp) < FIRE_BURST_MP )
	{
		dplayermessage Shadowfire Blade: Insufficient Mana for Flame Burst
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	if $get(ent_owner,skill.spellcasting.fire) >= 25
	setvard BURST_POS $get(ent_owner,origin)
	vectorset BURST_POS z $get_ground_height(BURST_POS)
	clientevent new all effects/sfx_fire_burst BURST_POS 256 1 (255,128,0)
	
	callexternal ent_owner ext_sphere_token enemy 512 BURST_POS
	setvard FIRE_BURST_TARGS $get(ent_owner,scriptvar,'PLR_SCAN_TOKEN')

	if FIRE_BURST_TARGS isnot none
	setvard BURST_DOT_BURN $get(ent_owner,skill.spellcasting.fire)
	multiply BURST_DOT_BURN 0.75
	calleventloop $get_token_amt(FIRE_BURST_TARGS) fire_burst_affect_targs	
}

{ fire_burst_affect_targs

	local CUR_TARG $get_token(FIRE_BURST_TARGS,game.script.iteration)

	if ( $get(CUR_TARG,isplayer) )
	{
		if !GAME_PVP
		local EXIT_SUB 1
	}
	if !EXIT_SUB

	local TARG_ORG $get(CUR_TARG,origin)
	local TRACE_START BURST_POS
	local TRACE_END TARG_ORG
	local TRACE_LINE $get_traceline(TRACE_START,TRACE_END,worldonly)
	if TRACE_LINE equals TRACE_END

	local TARG_ORG $get(CUR_TARG,origin)
	local MY_ORG $get(ent_owner,origin)
	local TARG_ANG $angles(MY_ORG,TARG_ORG)
	local NEW_YAW TARG_ANG
	addvelocity CUR_TARG $relvel($vec(0,NEW_YAW,0),$vec(0,800,0))

	applyeffect CUR_TARG effects/dot_fire 5.0 $get(ent_owner,id) BURST_DOT_BURN swordsmanship
}

{ ext_player_sit
	dbg ext_player_sit
	if ( FAURA_ACTIVE ) callevent end_faura
}
