#scope server

{
	const ITEM_NEVER_DELETE 1

	const BASE_LEVEL_REQ 35
	const RANGED_STAT archery
	const RANGED_DMG_MULTI 1.5

	setvard WEAPON_PRIMARY_SKILL RANGED_STAT
	const MODEL_VIEW viewmodels/v_steambow.mdl
	const MODEL_HANDS weapons/p_weapons3.mdl
	const MODEL_WORLD weapons/p_weapons3.mdl
	const MODEL_BODY_OFS 80

	const VMODEL_FILE viewmodels/v_steambow.mdl

	const PMODEL_FILE weapons/p_weapons3.mdl
	const PMODEL_IDX_HANDS 80
	const PMODEL_IDX_FLOOR 82

	const VANIM_IDLE0 1 //0-6
	const VANIM_FIRE 7 //1-6
	const VANIM_RELOAD1 14
	const VANIM_RELOAD2 15
	const VANIM_DRAW 0

	const WANIM_HAND standard_idle
	const WANIM_FLOOR standard_floor_idle

	setvard BOW_CHAMBER 0

	precache weapons/reload1.wav
	precache weapons/reload2.wav
	precache weapons/reload3.wav
	precache weapons/357_cock1.wav
}

#include items/base_item_extras

{ [shared] game_spawn
	name a|Steam Crossbow
	desc A strange dwarven contraption
	weight 50
	value 4000
	//wearable 0

	setanimext bow
	setworldmodel MODEL_WORLD
	setviewmodel MODEL_VIEW
	setpmodel	MODEL_HANDS
	sethand	both
	sethudsprite trade 147

	callevent register_attack
}

{ register_attack
	local reg.attack.type charge-throw-projectile
	local reg.attack.keys +attack1
	local reg.attack.hold_min&max 0;0
	local reg.attack.noautoaim 1
	local reg.attack.dmg.type pierce
	local reg.attack.range 1000
	local reg.attack.energydrain 0
	local reg.attack.stat archery
	local reg.attack.COF 0
	local reg.attack.projectile bolt
	local reg.attack.priority 10
	local reg.attack.delay.strike 0.0
	local reg.attack.delay.end 0.2 //reload time, I think
	local reg.attack.ofs.startpos (10,10,-15)
	local reg.attack.ofs.aimang (8,-4,0)
	local reg.attack.callback ranged
	local reg.attack.dmg.multi RANGED_DMG_MULTI //this has no affect on hitscan arrows, thus we pass to setvard HITSCAN_DMG_MULTI which they read from
	local reg.attack.noise 10

	setvard HITSCAN_DMG_MULTI RANGED_DMG_MULTI

	registerattack
}

{ ranged_start
	cancelattack
}

{ game_attack1_down

	if $get(ent_owner,scriptvar,'PLR_ACTIVE_WEAPON') equals $get(ent_me,id)

	//delay a sec if we just selected an arrow so ammo type can change
	local L_ARROW_MENU_TIME $get(ent_owner,scriptvar,'PLR_ARROW_MENU')
	if ( L_ARROW_MENU_TIME > 0 ) add L_ARROW_MENU_TIME 1.0
	if ( game.time < L_ARROW_MENU_TIME )
	{
		setvard NEXT_ATTACK L_ARROW_MENU_TIME
	}

	if game.time > NEXT_ATTACK

	if $get(ent_owner,canattack)

	if game.time > RELOAD_DONE_AT

	if ( BOW_CHAMBER < 7 )
	{
		local L_COF 0
		local L_SPEED 1000

		if ( UNDER_SKILLED )
		{
			local L_COF 20
			local L_SPEED 300

			local RND_LOCK $rand(1,3)
		}

		if ( RND_LOCK == 1 )
		{
			if BOW_CHAMBER < 6
			playsound 0 10 weapons/357_reload1.wav
			dplayermessage ent_owner Your lack of proficiency causes you to jam the weapon.
			setvard NEXT_ATTACK game.time
			add NEXT_ATTACK 4.0
			local EXIT_SUB 1
		}
		if !EXIT_SUB

		add BOW_CHAMBER 1
		local FIRE_ANIM BOW_CHAMBER
		add FIRE_ANIM VANIM_FIRE
		splayviewanim ent_me FIRE_ANIM

//		local PLR_ARROW $get(ent_owner,chosenarrow)
//		if ( PLR_ARROW equals unset )
//		{
//			clientcmd ent_owner "quickslot arrow"
//			local PLR_ARROW $get(ent_owner,chosenarrow)
//			if PLR_ARROW equals unset
//			local GENERIC_ARRROW 1
//			local PLR_ARROW proj_bolt_generic
//		}

		local PLR_ARROW $get(ent_owner,findbolt,remove)

		dbg arrowtype: PLR_ARROW

		//<projectile scriptname> <"view"|(src_origin)> <target|(targ_origin)|none> <speed> <damage> <cof> <skill|none> //Converted to use new tossprojectile //greatguys1@FEB2022
		callexternal ent_owner ext_tossprojectile PLR_ARROW view none L_SPEED 0 L_COF archery

		playowneranim hold xbow_idle global.anim.combatwalk

		playsound 0 10 weapons/xbow_reload1.wav
		playsound 0 10 weapons/bow/crossbow.wav
	}

	dbg chamber BOW_CHAMBER

	if ( BOW_CHAMBER >= 6 )
	{
		callevent do_reload
	}
	else
	{
		callevent 0.5 do_idle
		setvard NEXT_ATTACK game.time
		add NEXT_ATTACK 0.6
	}
}

{ game_+attack2

	if $get(ent_owner,canattack)
	if $get(ent_owner,scriptvar,'PLR_ACTIVE_WEAPON') equals $get(ent_me,id)
	if game.time > NEXT_ATTACK
	if ( BOW_CHAMBER == 0 ) splayviewanim ent_me IDLE_ANIM
	if BOW_CHAMBER > 0
	callevent do_reload
}

{ do_reload

	if $get(ent_owner,scriptvar,'PLR_ACTIVE_WEAPON') equals $get(ent_me,id)

	if game.time > RELOAD_DONE_AT 	//not if already in reload

	playowneranim once xbow_reload global.anim.combatwalk

	playsound 0 10 weapons/357_reload1.wav

	setvard BOW_CHAMBER 7
	setvard NEXT_ATTACK game.time
	add NEXT_ATTACK 5.0
	splayviewanim ent_me VANIM_RELOAD1
	setvard RELOAD_DONE_AT game.time
	add RELOAD_DONE_AT 3.35
	add RELOAD_DONE_AT 2.515

	callevent 3.35 do_reload2 
}

{ do_reload2

	if $get(ent_owner,scriptvar,'PLR_ACTIVE_WEAPON') equals $get(ent_me,id)

	playowneranim once xbow_reload global.anim.combatwalk

	setvard NEXT_ATTACK game.time
	add NEXT_ATTACK 2.515
	splayviewanim ent_me VANIM_RELOAD2
	setvard BOW_CHAMBER 0

	callevent 2.0 pilot_light
}

{ pilot_light
	if $get(ent_owner,scriptvar,'PLR_ACTIVE_WEAPON') equals $get(ent_me,id)

	svplaysound 0 10 weapons/bow/steam.wav
}

{ do_idle

	if $get(ent_owner,scriptvar,'PLR_ACTIVE_WEAPON') equals $get(ent_me,id)

	local IDLE_ANIM BOW_CHAMBER
	add IDLE_ANIM VANIM_IDLE0

	if ( game.time < RELOAD_DONE_AT ) local IDLE_ANIM 7
	if ( BOW_CHAMBER == 7 ) local IDLE_ANIM 7

	splayviewanim ent_me IDLE_ANIM

	//playowneranim once bow_aim_to_stand global.anim.combatwalk
}

//============== from polearms
{ [shared] game_deploy

	callevent item_deploy //compatibility

	setviewmodel VMODEL_FILE
	setmodel PMODEL_FILE
	setworldmodel PMODEL_FILE
	setmodelbody 0 PMODEL_IDX_HANDS

	setanimext xbow
	playviewanim VANIM_DRAW
	playanim WANIM_HAND

	if game.serverside
	callevent check_skill
	if ( BOW_CHAMBER > 0 )
	{
		callevent 0.1 redeploy_idle
	}
	//so I don't prematurely fire
	setvard NEXT_ATTACK game.time
	add NEXT_ATTACK 0.6

	//callevent 0.1 arrow_check
}

{ redeploy_idle //case we slotted this during reload
	local IDLE_ANIM BOW_CHAMBER
	add IDLE_ANIM VANIM_IDLE0
	if ( game.time < RELOAD_DONE_AT ) local IDLE_ANIM 7
	splayviewanim ent_me IDLE_ANIM
}

//{ arrow_check
//	local PLR_ARROW $get(ent_owner,chosenarrow)
//	if ( PLR_ARROW equals unset ) clientcmd ent_owner "quickslot arrow"
//}

{ game_show
	setmodel PMODEL_FILE
	setworldmodel PMODEL_FILE
	setmodelbody 0 PMODEL_IDX_HANDS
}

{ game_drop

	callevent item_drop //compatibility
}

{ game_fall

 	setmodelbody 0 PMODEL_IDX_FLOOR
	playanim WANIM_FLOOR

	callevent weapon_fall //compatibility
}

{ game_switchhands

	playviewanim  IDLE_ANIM

	callevent item_switchhands //compatibility
}

{ check_skill
	if game.serverside

	if $get(ent_owner,scriptvar,'GAVE_MAP_INTRO')

	local FIND_MELEE_STAT "skill."
	stradd FIND_MELEE_STAT RANGED_STAT
	//dbg game_deploy $get(ent_owner,FIND_MELEE_STAT) FIND_MELEE_STAT BASE_LEVEL_REQ
	if ( $get(ent_owner,FIND_MELEE_STAT) < BASE_LEVEL_REQ )
	{
		dplayermessage ent_owner You lack the skill to properly wield this weapon!
		local OUT_STR "You lack the proficiency to wield this weapon. ( requires: "
		stradd OUT_STR RANGED_STAT
		stradd OUT_STR " proficiency "
		stradd OUT_STR BASE_LEVEL_REQ
		stradd OUT_STR " )"
		infomsg ent_owner "Insufficient Skill" OUT_STR
		setvard UNDER_SKILLED 1
	}
	else
	{
		if ( UNDER_SKILLED )
		{
			setvard HITSCAN_DMG_MULTI RANGED_DMG_MULTI
		}
		setvard UNDER_SKILLED 0
	}

	if ( !UNDER_SKILLED )
	{
		setvard HITSCAN_DMG_MULTI RANGED_DMG_MULTI
	}
	else
	{
		setvard HITSCAN_DMG_MULTI 0.1
	}
}
