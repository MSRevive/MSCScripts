//Thothie - Modified to take one of two keys, and call ustart for compatiblity
//- This key hole should be universal - it'll take any key
//- It will fire ustart, and an event matching the key name used
//- If someone creates more keys please expand this accordingly

{ game_spawn

	name	       a|keyhole
	width 2
	height 16
	roam 0
	setmodel    misc/keyhole.mdl
	invincible  2
	setvar      KEY_USED 0
	fly 1	//suspend in air where placed
	float 1

	menu.autoopen 1
}

{ rusty_use_the_key

  //if KEY_USED equals 0

  recvoffer accept
  usetrigger item_key_rusty ustart
  //setvar KEY_USED 1
}

{ storage_use_the_key

  //if KEY_USED equals 0

  recvoffer accept
  usetrigger item_storageroomkey ustart
  //setvar KEY_USED 1
}

{ game_menu_getoptions

	if( $item_exists(PARAM1,item_key_rusty) )
	{
	local reg.mitem.title 	"Use the rusty key"
	local reg.mitem.type 	payment
	local reg.mitem.data 	item_key_rusty
	local reg.mitem.callback rusty_use_the_key
	menuitem.register
	}
}

{ game_menu_getoptions

	if( $item_exists(PARAM1,item_storageroomkey) )
	{
	local reg.mitem.title 	"Use the storage key"
	local reg.mitem.type 	payment
	local reg.mitem.data 	item_storageroomkey
	local reg.mitem.callback storage_use_the_key
	menuitem.register
	}

// New Keys


	if ( $item_exists(PARAM1,key_red) )
	{
	local reg.mitem.title 	"Use the crimson key"
	local reg.mitem.type 	payment
	local reg.mitem.data 	key_red
	local reg.mitem.callback key_red
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_blue) )
	{
	local reg.mitem.title 		"Use the sapphire key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_blue
	local reg.mitem.callback 	key_blue
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_green) )
	{
	local reg.mitem.title 		"Use the emerald key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_green
	local reg.mitem.callback 	key_green
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_skeleton) )
	{
	local reg.mitem.title 		"Use the skeleton key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_skeleton
	local reg.mitem.callback 	key_skeleton
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_brass) )
	{
	local reg.mitem.title 		"Use the brass key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_brass
	local reg.mitem.callback 	key_brass
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_gold) )
	{
	local reg.mitem.title 		"Use the gold key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_gold
	local reg.mitem.callback 	key_gold
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_treasury) )
	{
	local reg.mitem.title 		"Use the treasury key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_treasury
	local reg.mitem.callback 	key_treasury
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_forged) )
	{
	local reg.mitem.title 		"Use the forged key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_forged
	local reg.mitem.callback 	key_forged
	menuitem.register
	}

	if ( $item_exists(PARAM1,key_ice) )
	{
	local reg.mitem.title 		"Use the ice key"
	local reg.mitem.type 		payment
	local reg.mitem.data 	 	key_ice
	local reg.mitem.callback 	key_ice
	menuitem.register
	}
}

{ eventname key_red
	
	recvoffer accept
	usetrigger key_red ustart
}

{ eventname key_blue
	
	recvoffer accept
	usetrigger key_blue ustart
}

{ eventname key_green
	
	recvoffer accept
	usetrigger key_green ustart
}

{ eventname key_skeleton
	
	recvoffer accept
	usetrigger key_skeleton ustart
}

{ eventname key_brass
	
	recvoffer accept
	usetrigger key_brass ustart
}

{ eventname key_gold
	
	recvoffer accept
	usetrigger key_gold ustart
}

{ eventname key_treasury
	
	recvoffer accept
	usetrigger key_treasury ustart
}

{ eventname key_forged
	
	recvoffer accept
	usetrigger key_forged ustart
}

{ eventname key_ice
	
	recvoffer accept
	usetrigger key_forged ustart
}